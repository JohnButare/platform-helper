#!/usr/bin/env bash
. function.sh

run() {	init && args "$@" && ${command}Command "${args[@]}"; }

init() { :; }

usage()
{
	echot "\
usage: pi power
	Raspberry Pi helper commands

	clone		launch SD card copier to copy files (not entire device, faster)	
	EnableSsh|image

	firmware dir|channel|edit|info|update"
	exit $1
}

args()
{
	unset file

	while (( $# != 0 )); do
		case "$1" in "") : ;;
			--help|-h) usage 0;;
			EnableSsh) command="enableSsh";;
			*)
				! IsOption "$1" && [[ ! $command ]] && { CheckCommand "$1"; command="${1,,}"; shift; continue; }
				[[ "$command" == @(firmware|image) ]] && break
				UnknownOption "$1"
		esac
		shift
	done

	[[ ! $command ]] && { MissingOperand "command"; }
	args=("$@")
}

#
# commands
#

cloneCommand() { coproc sudox dbus-launch piclone; }
powerCommand() { ! dmesg --time-format ctime | grep -i volt; } # check for under voltage in the log

imageCommand()
{
	! IsElevated && { elevate RunScript --pause-error pi image "$@"; return; }

	local image="$(i dir)/platform/Raspberry Pi/Raspberry Pi OS" || return

	# select the firmware file
	local file="$1"; shift
	[[ ! $file ]] && { file="$(dialog --title "Select image" --stdout --fselect "$image/" $(($LINES-12)) 100)"; clear; }
	[[ ! $file ]] && { MissingOperand "file"; return 1; }
	[[ ! -f "$file" ]] && { EchoErr "pi: image \"$file\" does not exist"; return 1; }

	"$P/balena-cli/balena.exe" local flash "$(utw "$file")" --yes

	# does not mount properly just after flash so try several times
	for (( i=1; i<=10; ++i )); do
		enableSshCommand && return
		sleep 1
	done

	return 0
}

enableSshCommand()
{
	local drive drives found

	drive mount all || return
	IFS=$'\n' drives=( $(drive mounts) )

	printf "enabling..."
	
	for drive in "${drives[@]}"; do
		[[ ! -f "$drive/start.elf" ]] && continue
		touch "$drive/ssh" || return
		printf "$(GetFileName "$drive")..."
		found="true"
	done

	echo "done" 

	drive unmount all || return

	[[ ! $found ]] && { echo "PiEnableSsh: no Raspberry Pi images found"; return 1; }
	return 0
}

#
# Firmware Commands
#

firmwareCommand()
{
	local channel="/etc/default/rpi-eeprom-update"
	local dir="/lib/firmware/raspberrypi/bootloader"

	# detailed sub command: see SqlServer
	local command; CheckSubCommand firmware "$1"; shift
	[[ $# != 0 ]] && UnknownOption "$1"
	Firmware${command}Command "$@"
}

FirmwareDirCommand() { echo "$dir"; }
FirmwareChannelCommand() { sudoedit "$channel"; }
FirmwareUpdateCommand() { sudo rpi-eeprom-update -a && { ask "Reboot" && power reboot || return 0; }; }

FirmwareInfoCommand()
{
	header "Bootloader Version"
	sudoc vcgencmd bootloader_version || return
	
	[[ -f "$channel" ]] && { printf "\nUpdate channel:\n"; cat "$channel"; }
	echo

	header "Bootloader Configurationn"
	sudo vcgencmd bootloader_config | RemoveEmptyLines || return
}

FirmwareEditCommand()
{
	local FIRMWARE_RELEASE_STATUS; . "$channel" || return
	local dir="$dir/$FIRMWARE_RELEASE_STATUS"
	local config="$dir/bootconf.txt"; [[ -f "$config" ]] && { sudo bak --move "$config" || return; }

	# select the firmware file
	local file="$1"; shift
	[[ ! "$file" ]] && { file="$(dialog --title "Select Firmware" --stdout --fselect ""$dir/"" $(($LINES-12)) 100)"; clear; }
	[[ ! "$file" ]] && { MissingOperand "file"; return 1; }
	[[ ! -f "$file" ]] && { EchoErr "PiFirmwareEdit: firmware file \"$file\" does not exist"; return 1; }
	
	# extract the configuration
	sudoc cp "$file" "$dir/current.bin" || return
	rpi-eeprom-config "$dir/current.bin" | sudo tee "$config" || return
	[[ ! -f "$config" || "$(cat "$config")" == "" ]] && { EchoErr "Unable to extract the firmware configuration from \"$file\""; return 1; }
	sudo cp "$config" "$config.orig" || return
	
	# edit the configuration
	sudoedit "$config" || return
	
	# add the configuration to the firmware file
	if ! diff "$config" "$config.orig" >& /dev/null; then
		printf "Adding the configuration changes to the firmware file..."
		sudo rpi-eeprom-config --out "$dir/new-config.bin" --config "$config" "$dir/current.bin" || return
		echo "done"
	fi
	
	# apply the firmware
	if ask -dr n "Apply the firmware changes"; then
		sudo rpi-eeprom-update -d -f "$dir/new-config.bin" || return
	fi
	
	return 0
}

run "$@"
