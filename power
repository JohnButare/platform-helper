#!/usr/bin/env bash
. function.sh

usage()
{
	echot "\
usage: power sleep|reboot|shutdown
	System power
	fix info|sleep|wake		examine issues preventing computer sleep or wake"
	exit $1
}

init() { :; }

args()
{
	while [ "$1" != "" ]; do
		case "$1" in
			-h|--help) IsFunction "${command}Usage" && ${command}Usage || usage 0;;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ "$command" == @(fix) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && MissingOperand "command"
	args=("$@")
}

run() {	init; args "$@"; ${command}Command "${args[@]}"; }

sleepCommand()
{
	echo "Issuing sleep..."
	psshutdown -d -t 0
}

shutdownCommand()
{
	echo "Issuing shutdown..."
	psshutdown -s -f -t 0
}

rebootCommand()
{
	echo "Issuing reboot..."
	psshutdown -r -f -t 0
}

fixCommand()
{
	local command; CheckSubCommand fix "$1"; shift
	[[ $# != 0 ]] && UnknownOption "$1"
	Fix${command}Command "$@"
}

FixSleepCommand()
{
	! IsElevated && { sudo --wait power fix sleep; return; }

	local numRequests="$(powercfg /requests | egrep -i None | wc -l)"
	if (( numRequests == 6 )); then
		echo "No devices are preventing the computer from sleeping"
		return 0
	fi

	echo "Requests preventing sleep..."
	PowerCfg.exe -REQUESTS
}

FixWakeCommand()
{
	echo "Devices which can wake the system:"
	PowerCfg -DEVICEQUERY wake_armed

	echo "Device which last woke the system:"
	PowerCfg -LastWake
}

FixInfoCommand()
{
echot "\
"'Wake:
- Disable wake: PowerCfg -DeviceDisableWake <devicename>
- Example: PowerCfg -DeviceDisableWake "HID Keyboard Device"

Sleep:
- View overrides:  powercfg -RequestsOverride
- Add override:    powercfg -RequestsOverride SERVICE "<device>" SYSTEM
- Remove override: powercfg -RequestsOverride SERVICE "<device>"
- Common overrides:
powercfg -RequestsOverride DRIVER "Realtek High Definition Audio" SYSTEM
powercfg -RequestsOverride DRIVER "Sound Blaster X-Fi Xtreme Audio" SYSTEM
powercfg -RequestsOverride SERVICE "\Device\HarddiskVolume1\Windows\System32\svchost.exe (CryptSvc)" SYSTEM'
}

run "$@"
