#!/usr/bin/env bash
. app.sh || exit

usage() {	echot "usage: TinyTabs [start|close|program|IsInstalled](start)
	profile dir|SaveDir|save|restore [<profile name>|default](latest)
	-b, --brief		brief status messages"; exit $1; }

init()
{
	program="$P32/TidyTabs/TidyTabs.Daemon.exe"
	profileName="TidyTabs"
	profileDirectory="$ADATA/TidyTabs"
}

args()
{
	unset -v brief

	while (( $# != 0 )); do
		case "$1" in
			-h|--help) usage 0;;
			--brief|-b) brief="--brief";;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ -e "$1" ]] && break
				[[ "$command" == @(start|profile) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='start'

	args=( "$@" )
}

programCommand() { echo "$program"; }
startupCommand() { startCommand "$@"; }

startCommand()
{
	! IsInstalledCommand && return 1
	
	start $wait "$program" $waitArg "$@"
}

run() {	init; args "$@"; ${command}Command "${args[@]}"; }
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$(GetFileName "$program")"; }
closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } 
restartCommand() { closeCommand && startCommand; }

profileCommand()
{
	[[ ! -d "$profileDirectory" ]] && return
	profile --app "$profileName" --method "$profileDirectory" --files "*" "$@" || usage 1
}

run "$@"
