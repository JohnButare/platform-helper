#!/usr/bin/env bash
. function.sh

# bootstrap a generic system once the platform specific installation is done
# flow bootstrap-remote (optional) -> bootstrap-init -> boostrap -> inst bootstrap

init()
{
	host="$1"
	install="$2"
}

run()
{
	init "$@" || return
	RunPlatform bootstrap || return
	setupDataDir || return
	syncFiles || return
	runInstall || return
}

runInstall()
{
	local args=()
	[[ $install ]] && args+=( --hint "$install" )
	inst --quiet --no-prompt "${args[@]}" bootstrap || return
}

bootstrapWin()
{	
	linkDir "$WIN_USERS/Public" "$PUB" || return
	linkDir "$WIN_USERS/Public/Documents/data" "$DATA" || return
	linkDir "$WIN_HOME/Documents" ~/Documents || return
	return 0
}

linkDir() # SRC LINK
{
	local src="$1" link="$2"
	[[ -L "$link" ]] && return
	sudo ${G}mkdir --parents "$src" || return
	sudo ln -s "$src" "$link" || return
}

setupDataDir()
{
	[[ ! -d "$1" ]] && { sudo ${G}mkdir --parents "$DATA" || return; }
	sudo chown $USER "$DATA" || return
}

syncFiles()
{
	local options; [[ ! -d "$DATA/bin" ]] && options="--src-older" # assume new system is older if BIN directory does not exist
	SyncLocalFiles $options "$host" || return
}

run "$@"
