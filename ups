#!/usr/bin/env bash
. app.sh || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [set|status](status)
Manage a UPS."
}

init() { defaultCommand="status"; }

#
# Get Command
#

getUsage()
{
	EchoWrap "\
Usage: $(ScriptName) get REGISTER|AutoOn|restart|shutdown|AutoOn"
}

getArgStart() { unset -v register; }
getArgs() { registerArgGet "$@"; shift; }
getCommand() { python3 "$BIN/UpsRead.py" "$register"; }

#
# Set Command
#

setUsage()
{
	EchoWrap "\
Usage: $(ScriptName) set REGISTER|AutoOn|restart|shutdown VALUE"
}

setArgStart() { unset -v register value; }
setArgs() { registerArgGet "$@"; shift; ScriptArgGet "value" -- "$@"; }
setCommand() { python3 "$BIN/UpsWrite.py" "$register" "$value"; }

#
# Status Commands
#

statusUsage()
{
	EchoWrap "\
Usage: $(ScriptName) status
Show UPS status.

	-m|--monitor		monitor status"
}

statusArgStart() { unset -v monitor; }

statusOpt()
{
	case "$1" in
		-m|--monitor) monitor="--monitor";;
		*) return 1;;
	esac
}

statusCommand()
{
	if [[ $monitor ]]; then watch -n 1 ups status;
	else statusDo;
	fi
}

statusDo() { python3 "$BIN/UpsStatus.py"; }

#
# helper
#

registerArgGet()
{
	ScriptArgGet "register" -- "$@"

	case "${register,,}" in
		autoon) register=25;;
		restart) register=26;;
		shutdown) register=24;;
	esac
}


ScriptRun "$@"
