#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" script || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [COMMAND]... [OPTION]...
Additional Kea functionality.
	
	config			edit configuration
	log					show server logs
	service			control the DHCP service
	test				test the DHCP server
	version			show version information

	-4|-6				use IPv4 or IPv6"
}

argStart() { ipv="4"; }

opt()
{
	case "$1" in
		-4) ipv="4";;
		-6) ipv="6";;
		*) return 1;;
	esac
}

argEnd()
{
	log="/var/log/kea/kea-dhcp${ipv}.log"
	programSource="/usr/local/sbin/kea-dhcp${ipv}"
	programPackage="/usr/sbin/kea-dhcp${ipv}"
	service="kea-dhcp${ipv}-server"
	serviceFile="/lib/systemd/system/kea-dhcp${ipv}-server.service"
}

#
# commands
#

configCommand() { checkInstalled && sudoe "/etc/kea/kea-dhcp${ipv}"* && serviceRestartCommand; }

#
# Log Commands
#

logUsage()
{
		echot "\
Usage: $(ScriptName) log [service]
Service log commands.

	log						show the main application log
	log service		show the service log"
}

logCommand() { checkInstalled && LogShow "$log"; }
logServiceCommand() { service log "$service"; }

#
# service Commands
#

serviceUsage()
{
		echot "\
Usage: $(ScriptName) service log|restart|start|status|stop
Service commands."
}

serviceCommand() { usage; }
serviceLogCommand() { service log "$service"; }
serviceRestartCommand() { service restart "$service"; }
serviceStartCommand() { service start "$service"; }
serviceStatusCommand() { service status "$service"; }
serviceStopCommand() { service stop "$service"; }

#
# Test Command
#

testUsage() { echot "Usage: $(ScriptName) test HOST\nTest DHCP server by renewing the DHCP address of the specified host."; }
testArgs() { ScriptArgGet "host" -- "$@"; }
testCommand() { SshHelper connect "$host.local" -- 'sudo dhclient -r; sudo dhclient'; ping "$host.local"; }

#
# Version Commands
#

versionUsage()
{
		echot "\
Usage: $(ScriptName) version [detail]
Service Kea version.

	detail		show detailed version information"
}

versionCommand()
{
	checkInstalled || return
	
	if [[ $verbose ]]; then
		versionDetailCommand
	else
		"$(getProgram)" -v
	fi
}

versionDetailCommand()
{
	local activeProgram="$(getProgram)"
	local activeLog="$(getLog)"
	local activeInstallationType="Source"; [[ "$activeProgram" == "$programPackage" ]] && activeDescription="Package"

	header "$activeInstallationType Installation (active)"
	echo "$(cat <<-EOF
		version="$("$activeProgram" -v)"
		program="$activeProgram"
		log="$activeLog"
		EOF
	)"

	if [[ -f "$programPackage" && "$activeProgram" != "$programPackage" ]]; then
		echo; header "Package Installation"
		echo "$(cat <<-EOF
			version="$("$programPackage" -v)"
			program="$programPackage"
			EOF
		)"
	fi

	if [[ -f "$programSource" && "$activeProgram" != "$programSource" ]]; then
		echo; header "Source Installation"; echo 
		echo "$(cat <<-EOF
			version="$("$programSource" -v)"
			program="$programSource"
			EOF
		)"
	fi
}

#
# helper
#

checkInstalled() { isInstalled && return; ScriptErr "Kea DHCP server is not installed"; return 1; }
getProgram() { cat "$serviceFile" | grep ExecStart | cut -d" " -f 1 | cut -d"=" -f 2; }
isInstalled() { [[ -f "$serviceFile" ]]; }

ScriptRun "$@"
