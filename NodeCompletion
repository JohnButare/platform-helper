#
# node
#

_node_complete() {
  local cur_word options
  cur_word="${COMP_WORDS[COMP_CWORD]}"
  if [[ "${cur_word}" == -* ]] ; then
    COMPREPLY=( $(compgen -W '--inspect-port --icu-data-dir --title --trace-event-categories --trace-event-file-pattern --completion-bash --throw-deprecation --max-http-header-size --loader --help --v8-pool-size --trace-sync-io --zero-fill-buffers --security-reverts --pending-deprecation --version --preserve-symlinks --use-bundled-ca --v8-options --perf-prof --preserve-symlinks-main --openssl-config --no-deprecation --tls-cipher-list --expose-internals --use-openssl-ca --http-parser [ssl_openssl_cert_store] --debug --track-heap-objects --experimental-repl-await --experimental-modules --experimental-vm-modules --abort-on-uncaught-exception --max-old-space-size --trace-warnings --perf-basic-prof --inspect --interactive --stack-trace-limit --experimental-worker --no-force-async-hooks-checks --no-warnings --prof-process --redirect-warnings --trace-deprecation --check [has_eval_string] --eval --print --require --napi-modules --inspect-brk --debug-brk --inspect-brk-node -v --debug-port --trace-events-enabled -h --print <arg> --prof-process --debug-brk= -c -pe -e -p -r -i --inspect-brk= --inspect= --debug= --inspect-brk-node=' -- "${cur_word}") )
    return 0
  else
    COMPREPLY=( $(compgen -f "${cur_word}") )
    return 0
  fi
}
complete -F _node_complete node node_g

