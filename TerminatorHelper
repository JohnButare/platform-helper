#!/usr/bin/env bash
. app.sh || exit

run() {	init; args "$@"; ${command}Command "${args[@]}"; }

init() 
{
	program="terminator"
	dir=~/.config/terminator
	[[ ! -d "$dir" ]] && { mkdir "$dir" || return; }
	return 0
}

usage() {	echot "usage: TerminatorHelper close|IsInstalled|restart|start|startup
	profile dir|SaveDir|save|restore [<profile name>|default](latest)"; exit $1; }

args()
{
	unset -v brief

	while (( $# != 0 )); do
		case "$1" in
			--brief|-b) brief="--brief";;
			-h|--help) usage 0;;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ "$command" == @(start|startup|profile) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='start'

	args=( "$@" )
}

startCommand()
{
	! IsInstalledCommand && return 1
	IsSsh && return
	IsRunningCommand && return 0

	# set X DISPLAY if not set (initial login shell does not set DISPLAY)
	[[ ! $DISPLAY ]] && InitializeXServer

	# start using terminator.vbs to ensure when this process stops terminator does not stop
	# wscript.exe "c:\Users\Public\Documents\data\platform\win\terminator.vbs"
	start terminator

	# needs some time to start when launching from vbs otherwise terminator window never appears
	sleep 1
}

closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program" 2; }
IsInstalledCommand() { InPath "$program"; }
IsRunningCommand() { ps -aux | grep -v "grep" | grep -i "/usr/bin/python.* /usr/bin/terminator" >& /dev/null; }
restartCommand() { closeCommand && startCommand; }
startupCommand() { startCommand; }
profileCommand() { profile --app "terminator" --method "$dir" --files "*" "$@" || usage 1; }

run "$@"
