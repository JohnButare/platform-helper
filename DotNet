#!/usr/bin/env bash
. app.sh || exit

usage() {	echot "usage: DotNet [1|2|4](4) [COMMAND](cd)
  cd|MachineConfig|gac|gacCd|GacUtil|clr
  sNet|name|version|RuntimeVersion|FrameworkVersion|target <executable or assembly>
  register <assemblies> - register assemblies in the current directory, supports wildcards"
	exit $1; }

args()
{
	version=4
	local frameworkVersions=(1 2 4)
	IsInArray "$1" frameworkVersions && { version="$1"; shift; }

	while (( $# != 0 )); do
		case "$1" in
			-h|--help) usage 0;;
			GacCd) command="GacCd";; GacUtil) command="GacUtil";; MachineConfig) command="MachineConfig";;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ "${command:-start}" == @(GacUtil|build|target|) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='cd'
	args=( "$@" )
}

init()
{ 
	case "$version" in
		1) version="v1.1.4322";;
		2) version="v2.0.50727";;
		4) version="v4.0.30319";;
	esac

	gacDir="$WINDIR/assembly"
	gacPhysicalDir="$WINDIR/assembly/gac"
	frameworkRootDir="$WINDIR/Microsoft.NET/Framework"
	frameworkDir="$WINDIR/Microsoft.NET/Framework/$version"
	frameworkFileVersion=( v4.0 3.5 3.0 2.0 1.1 1.0 )
	assemblyVersions=( 4.0.0.0 3.5.0.0 3.0.0.0 2.0.0.0 1.0.5000.0 1.0.3300.0 )
	installUtil="$frameworkDir/installUtil.exe"
	msBuild="$P32/MSBuild/14.0/bin/MSBuild.exe"
	[[ ! -f "$msBuild" ]] && msBuild="$P32/MSBuild/12.0/bin/MSBuild.exe"
	[[ ! -f "$msBuild" ]] && msBuild="$frameworkDir/msBuild.exe"
	gacUtil="$frameworkRootDir/v1.1.4322/gacUtil.exe"
}

run() {	args "$@"; init; ${command}Command "${args[@]}"; }
cdCommand() { echo "$frameworkDir"; }
gacCommand() { start explorer "$gacDir"; }
GacCdCommand() { echo "$gacPhysicalDir"; }
GacUtilCommand() { "$gacUtil" /nologo "$@"; }

buildCommand()
{ 
	export -n PLATFORM # msbuild uses PLATFORM variable
	start --direct "$msBuild" "$@"
	result=$?
	export PLATFORM
	exit $result
}

MachineConfigCommand()
{
	file="$frameworkDir/CONFIG/machine.config"
	[[ ! -f "$file" ]] && { EchoErr "DotNet: $file does not exist"; return 1; }
	sudo notepad "$(utw "$file")" || return
}

run "$@"