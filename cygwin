#!/bin/bash
. app.sh

# arguments: setup.exe --help, -q|--quiet-mode, -P|--packages <command separated package list>
#   -M|--package-manager package manager
# example: 
#   cygwin download 			# view and download the latest updates, or download new packages
#   cygwin install 				# install latest updates
# 	cygwin download -q 		# get latest updates with no prompting
# 	cygwin install -q 		# install latest updates with no prompting
#   cygwin download -q -P attr,cron	# download the attr and cron packages silently
#   cygwin install -q -P attr,cron	# download the attr and cron packages silently
#		cygwin close || return; cygwin install || return # install packages which require Cygwin programs closed

usage() {	
echot "\
usage: cygwin [command] (install)
  close - close Cygwin programs
  start|download|install|help [-P|--packages <package,...>] [-C|--categories <categories,...>] 
  	download (to local store), install (from local store), or start setup
	-q|--quiet  		run in quiet mode without prompting"
	exit $1
}

init()
{ 
	installDir="$P/Cygwin"
	bin="$InstallDir/bin"
	downloadSite="http://mirrors.kernel.org/sourceware/cygwin/"
	setupArgs=( --no-shortcuts --site "$downloadSite" --root "\"$(utw "$installDir")\"" )
}

args()
{
	unset packageDir 
	quiet="--package-manager"
	while [[ "$1" != "" ]]; do
		case "$1" in
			-q|--quiet) quiet="--quiet-mode";;
			-h|--help) usage 0;;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ "$command" == @(download|install|start) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='install'
	args=( "$@" )
}

run() {	init; args "$@"; ${command}Command "${args[@]}"; }
RunSetup() {	FindSetup || return; cygstart -d "$tmp" "$setup" "${setupArgs[@]}" "$@"; }
startCommand() { RunSetup "$@"; }
helpCommand() { FindSetup || return; "$setup" --help; }
installCommand() { RunSetup $quiet --local-install "$@"; }
downloadCommand() { RunSetup $quiet --download "$@"; }

closeCommand()
{
	pskill ssh-agent >& /dev/null
	service stop sshd

	while true; do
		bashCount=$(( $(pslist bash |& egrep "^bash" | wc -l) - 4 ))
		(( bashCount == 0 )) && break
		pause "Manually close $bashCount bash shells then process any key..."
	done
	echo "Once setup has started, close this terminal"
}

FindSetup()
{
	[[ $setup ]] && return

	# FindPublicDoc data/install/Cygwin/setup/setup-x64.exe
	#local base="/cygdrive/e"
	local base="$PUB/Documents"

	setup="$base/data/install/Cygwin/setup/setup-x64.exe"
	packageDir="$base/cygdrive/e/data/install/Cygwin/package-x64"

	setupArgs+=( --local-package-dir "\"$(utw "$packageDir")\"" )
}

run "$@"