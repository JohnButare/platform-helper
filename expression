#!/bin/bash
. app.sh

init()
{ 
	unset config
	command="start"
	version="4"
	BlendProg="$P32/Microsoft Expression/Blend $version/Blend.exe"
	DesignProg="$P32/Microsoft Expression/Design $version/Design.exe"
	EncoderProg="$P32/Microsoft Expression/Encoder $version/Encoder.exe"
	WebProg="$P32/Microsoft Expression/Web $version/ExpressionWeb.exe"

	EncoderConfig="$APPDATE/Microsoft/Expression/Encoder$version/user.config"
	MediaProg="$P32/Microsoft Expression/Media 2/Media.exe"
}

usage() {	echot "usage: expression [blend|design|encoder|media|web](web) [config]"; exit $1; }

args()
{
	command='web'

	while [[ "$1" != "" ]]; do
		case "$1" in
			-c|--config) config="true";;
			-h|--help) usage 0;;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";;
			*) IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }; break
		esac
		shift
	done
	args=( "$@" )
}

function blendCommand() { [[ ! -f "$BlendProg" ]] && return 1; start "$BlendProg" "$@"; }
function designCommand() { [[ ! -f "$DesignProg" ]] && return 1; start "$DesignProg" "$@"; }
function mediaCommand() { [[ ! -f "$MediaProg" ]] && return 1; start "$MediaProg" "$@"; }
function webCommand() { [[ ! -f "$WebProg" ]] && return 1; start "$WebProg" "$@"; }

function encoderCommand() 
{ 
	[[ $config ]] && { TextEdit "$EncoderConfig"; return; }
	[[ ! -f "$EncoderProg" ]] && return 1
	start "$EncoderProg" "$@"
}

run() {	init; args "$@"; ${command}Command "${args[@]}"; }
IsInstalledCommand() { [[ -f "$WebProg" ]]; }

run "$@"