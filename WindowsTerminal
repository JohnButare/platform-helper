#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|config|IsInstalled|IsRunning|profile|program|restart|start|startup](wt)
$(ScriptName) commands."
}

init()
{
	defaultCommand="wt"
	wtVersion="1.19.2831.0" wtSuffix="8wekyb3d8bbwe" wtDir="$UADATA/Microsoft/WindowsApps/Microsoft.WindowsTerminalPreview_${wtSuffix}"
	profileName="WindowsTerminal"; IsPlatform wsl1 && profileName="WindowsTerminalWsl1"
	profileDir="$UADATA/Packages/Microsoft.WindowsTerminalPreview_$wtSuffix/LocalState"
	profileMask="settings.json"
	program="$wtDir/wt.exe"
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "WindowsTerminal.exe"; }
isInstalledCommand() { [[ -f "$wtDir/wt.exe" ]]; }
isRunningCommand() { IsProcessRunning "WindowsTerminal.exe"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { profile $noPrompt --no-control --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }

versionCommand()
{
	[[ -f "$program" ]] || return
	local hash; hash="$(GetFileHash "$program")" || return

	case "$hash" in
		439baa1b33514fb81632aaf44d16a9378c5664fc) echo "1.12.10983.0";;
		*) echo "0";;
	esac
}

#
# Config Commands
#

configUsage() { echot "Usage: $(ScriptName) config [set|show](show)\nConfigure Windows Terminal."; }
configCommand() { configShowCommand; }
configShowUsage() { echot "Usage: $(ScriptName) config show\nShow Windows Terminal configuration variables."; }
configShowCommand() { ScriptReturn wtDir wtVersion wtSuffix; }
configSetUsage() { echot "Usage: $(ScriptName) config set\nSet Windows Terminal App Execution Alias configuration."; }

# configSetCommand - set the Windows Application Alias for this version
configSetCommand()
{
	local key='HKCU/Software/Microsoft/Windows/CurrentVersion/App Paths/wt.exe'
	local dir="$(utw "$wtDir")"
	registry set "$key/Path" REG_SZ "$dir" && registry set "$key/" REG_SZ "$dir\\wt.exe" 
}

#
# Wt Command
#

wtUsage()  { echot "Usage: $(ScriptName)  [OPTION]... [COMMAND]...\nRun a Windows Terminal (wt.exe) command."; }
wtArgStart() { unset -v args; }
wtArgs() { args="$@"; shift "$#"; }
wtCommand() { wt.exe "${args[@]}" "${otherArgs[@]}"; }

ScriptRun "$@"
