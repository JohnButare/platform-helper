#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|config|IsInstalled|IsRunning|profile|program|restart|start|startup](wt)
$(ScriptName) commands."
}

init()
{
	defaultCommand="wt"
	wtVersion="1.19.3172.0" wtSuffix="8wekyb3d8bbwe" wtDir="$UADATA/Microsoft/WindowsApps/Microsoft.WindowsTerminalPreview_${wtSuffix}"
	profileName="WindowsTerminal"; IsPlatform wsl1 && profileName="WindowsTerminalWsl1"
	profileDir="$UADATA/Packages/Microsoft.WindowsTerminalPreview_$wtSuffix/LocalState"
	profileMask="settings.json"
	program="$wtDir/wt.exe"
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "WindowsTerminal.exe"; }
isInstalledCommand() { [[ -f "$wtDir/wt.exe" ]]; }
isRunningCommand() { IsProcessRunning "WindowsTerminal.exe"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { profile $noPrompt --no-control --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { pause; AppInstallCheck && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }
versionCommand() { wmic.exe process get ExecutablePath | grep Microsoft.WindowsTerminal | head -1 | cut -d"_" -f2; } # assume Windows Terminal is running, no permission to $P/WindowsApps

#
# Config Commands
#

configUsage() { echot "Usage: $(ScriptName) config [set|show](show)\nConfigure Windows Terminal."; }
configCommand() { configShowCommand; }
configShowUsage() { echot "Usage: $(ScriptName) config show\nShow Windows Terminal configuration variables."; }
configShowCommand() { ScriptReturn wtDir wtVersion wtSuffix; }
configSetUsage() { echot "Usage: $(ScriptName) config set\nSet Windows Terminal Preview to the Default terminal applications."; }

configSetCommand()
{
	local key='HKCU/Console/%%Startup'	
	registry set "$key/DelegationConsole" REG_SZ "{06EC847C-C0A5-46B8-92CB-7C92F6E35CD5}" && registry set "$key/DelegationTerminal" REG_SZ "{86633F1F-6454-40EC-89CE-DA4EBA977EE2}"
}

#
# Wt Command
#

wtUsage()  { echot "Usage: $(ScriptName)  [OPTION]... [COMMAND]...\nRun a Windows Terminal (wt.exe) command."; }
wtArgStart() { unset -v wtArgs; }
wtArgs() { wtArgs="$@"; shift "$#"; }
wtCommand() { wt.exe ${wtArgs[@]} ${otherArgs[@]}; }

ScriptRun "$@"
