#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|config|IsInstalled|IsRunning|profile|program|restart|start|startup](start)
$(ScriptName) commands."
}

init()
{
	wtVersion="1.13.10734.0" wtSuffix="8wekyb3d8bbwe" wtDir="$UADATA/Microsoft/WindowsApps/Microsoft.WindowsTerminalPreview_${wtSuffix}"
	defaultCommand="start"
	program="$wtDir/wt.exe"
	profileName="WindowsTerminal"; IsPlatform wsl1 && profileName="WindowsTerminalWsl1"
	profileDir="$UADATA/Packages/Microsoft.WindowsTerminalPreview_$wtSuffix/LocalState"; [[ ! -d "$profileDir" ]] && { ${G}mkdir --parents "$profileDir" || return; }
	profileMask="settings.json"
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "WindowsTerminal.exe"; }
isInstalledCommand() { [[ -f "$wtDir/wt.exe" ]]; }
isRunningCommand() { ! isInstalledCommand && return 1; IsProcessRunning "WindowsTerminal.exe"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }
profileCommand() { profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { isInstalledCommand && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }
versionCommand() {  isInstalledCommand && echo "$wtVersion"; }

configUsage() { echot "Usage: $(ScriptName) config [set|show](show)\nConfigure Windows Terminal."; }
configCommand() { configShowCommand; }
configShowUsage() { echot "Usage: $(ScriptName) config show\nShow Windows Terminal configuration variables."; }
configShowCommand() { ScriptReturn wtDir wtVersion wtSuffix; }
configSetUsage() { echot "Usage: $(ScriptName) config set\nSet Windows Terminal App Execution Alias configuration."; }

# configSetCommand - set the Windows Application Alias for this version
configSetCommand()
{
	local key='HKCU/Software/Microsoft/Windows/CurrentVersion/App Paths/wt.exe'
	local dir="$(utw "$wtDir")"
	registry set "$key/Path" REG_SZ "$dir" && registry set "$key/" REG_SZ "$dir\\wt.exe" 
}

ScriptRun "$@"
