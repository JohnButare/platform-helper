#!/bin/bash
. function.sh || exit

usage()
{
	echot "/
usage: GitHelper git|gui|tgui
	Addition Git functionality"
	exit $1
}

args()
{
	unset command help dest exclude file show arg1 arg2
	versions=( 2013 2012 )
	while (( $# != 0 )); do
		case "$1" in
			--help) help="--help";;
			IsInstalled) command="IsInstalled";;
			*)
				! IsOption "$1" && IsInArray "$1" versions && { version="$1"; shift; continue; }
				[[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				[[ "$command" == @(git|gui|tgui) ]] && break																						# defer argument processing
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && { MissingOperand "command"; }
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage || usage 0; }
	args=("$@")
}

init()
{ 
	git="$P32/Git/bin/git.exe"
	gui="$P32/GitExtensions/GitExtensions.exe"
	tgui="$P/TortoiseGit/bin/TortoiseGitProc.exe"
}

run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }
IsInstalledCommand() { [[ -f "$git" ]]; }

gitCommand()
{
	[[ ! -f "$git" ]] && { EchoErr "Could not find git command: is Git Extensions installed?"; return 1; }
	start --direct "$git" "$@"
}

guiCommand()
{
	[[ ! -f "$gui" ]] && { EchoErr "Could not find GitExtensions command: is Git Extensions installed?"; return 1; }

	# convert /path:"$dir" paths
	#local args; for arg in "$@"; do
	#	[[ "$arg" == @(/path:*) ]] && args+=( "/path:$(utw "${arg#/path:}")" ) || args+=( "$arg" )
	#done

	[[ $# == 0 ]] && start "$gui" || start --direct "$gui" "${args[@]}"
}

tguiCommand()
{
	[[ ! -f "$tgui" ]] && { EchoErr "Could not find TortoiseGitProc command: is TortoiseGit installed?"; return 1; }

	# convert /path:"$dir" paths
	#local args; for arg in "$@"; do
	#	[[ "$arg" == @(/path:*) ]] && args+=( "/path:$(utw "${arg#/path:}")" ) || args+=( "$arg" )
	#done

	start --direct "$tgui" "${args[@]}"
}

run "$@"
