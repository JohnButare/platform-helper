#!/usr/bin/env bash
. function.sh

usage()
{
	echot "\
usage: template SRC DEST
	Move SRC directory to DEST directory
	-c, --copy						copy the directory instead of moving it
	-p, --parents					create destination parent directories
	    --preserve				preserve mode, ownerships, and timestamps
	-r, --rename					rename SRC, DEST ends with a new name for SRC
	-s, --suppress				suppress error message if SRC does not exist"
	exit $1
}

init() { :; }

args()
{
	unset copy src dest parents preserve rename suppress
	while [ "$1" != "" ]; do
		case "$1" in
			--copy|-c) copy="--copy";;
			--parents|-p) parents="--parents";;
			--preserve) preserve="--preserve";;
			--rename|-r) rename="--rename";;
			--suppress|-s) suppress="--suppress";;
			--help|-h) IsFunction "${command}Usage" && ${command}Usage || usage 0;;
			*)
				! IsOption "$1" && [[ ! $src ]] && { src="$1"; shift; continue; }
				! IsOption "$1" && [[ ! $dest ]] && { dest="${1%*/}"; shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $src ]] && MissingOperand "SRC"
	[[ ! $dest ]] && MissingOperand "DEST"
	args=("$@")
}

run() 
{	
	init
	args "$@"

	if [[ ! -d "$src" ]]; then
		[[ $suppress ]] && return 0
		EchoErr "MergeDir: source directory \`$src\`: No such directory"
		return 1
	fi

	[[ ! $rename ]] && dest="$dest/$(GetFileName "$src")"

	[[ ! -d "$dest" ]] && { ${G}mkdir $parents "$dest" || return; }

	[[ "$(DirCount "$src")" != "0" ]] && { cp -r $preserve "$src/"* "$dest" || return; }
	[[ ! $copy ]] && rm -fr "$src" || return
	return 0
}

run "$@"
