#!/usr/bin/env bash
#. app.sh || exit

pause() { echo "${*-Press enter when ready...}"; read -n 1 -s -p ""; }

[[ $# != 2 ]] && { echo "usage: git freeze N VERSION"; exit 1; }

releaseBranch=$(git branch --list -r | egrep "^[ ]*origin/Release-v$2$" | cut -d/ -f2 | sed 's/ //g')
[[ ! $releaseBranch ]] && { echo "Release branch Release-v$2 does not exist on origin"; exit 1; }

currentBranch="$(git symbolic-ref -q HEAD | cut -d"/" -f 3)"
[[ ! $currentBranch ]] && { echo "Not on a branch"; exit 1; }

if [[ "$(git status --porcelain)" ]]; then
	echo "Current branch $currentBranch has changes that must be committed before release"
	exit 1
fi

echo "Cleaning up $currentBranch onto $releaseBranch..."
git rebase --interactive HEAD~$1 --onto $releaseBranch || exit 1

call ask 'Continue' || exit 1

git push --force || exit 1

echo "Merging $currentBranch into $releaseBranch..."
git checkout $releaseBranch || exit 1
git merge $currentBranch || exit 1
git push || exit 1

if [[ "$currentBranch" != "develop" ]]; then
	echo "Freezing $currentBranch..."
	git branch -m $currentBranch Frozen-$currentBranch || exit 1
	git push origin :$currentBranch || exit 1
	git push -u origin Frozen-$currentBranch || exit 1
fi
