#!/usr/bin/env bash
. function.sh || exit

run() {	init && args "$@" && ${command}Command "${args[@]}"; }

init() 
{
	if [[ ! -d "$P32/Windows Kits/10/Assessment and Deployment Kit" ]]; then
		EchoErr "adk: the Windows Assessment and Deployment Kit is not installed"
		exit 1
	fi

	winPeDir="$WIN_ROOT/WinPE_amd64"
	peDir="$DATA/appdata/WinPE"; [[ ! -d "$peDir" ]] && { mkdir --parents "$peDir" || return; }

	return 0
}

usage()
{
	echot "\
usage: adk
	Windows Application and Development Kit utilities

	pe [make|bak|commit|discard|mount|iso|copy|nbcopy](make)
		make 			perform all the steps to make and deploy the WinPE image
		copy 			Copy and extract the WinPE ISO to the appdata directory for better disk performance
		nbcopy 		Copy the extracted the WinPE ISO to the netboot.xyz asset directory"
	exit $1
}

args()
{
	declare -g args=() windowStyle="hidden"; unset -v command file # clears the variable

	while (( $# != 0 )); do
		case "$1" in "") : ;;
			-h|--help) usage 0;;
			*)
				! IsOption "$1" && [[ ! $command ]] && { CheckCommand "$1"; command="${1,,}"; shift; continue; }
				! IsOption "$1" && [[ "$command" == @(pe) ]] && break
				UnknownOption "$1"
		esac
		shift
	done

	command="${command:-pe}"
	args=("$@")
}

#
# helper
#

getNbPeDir()
{
	nbDataDir="$(unc mount //nas3/root/usr/local/data)" || return

	nbPeDir="$nbDataDir/appdata/netbootxyz/windows/WinPE/x64"
	[[ ! -d "$nbPeDir" ]] && { mkdir --parents "$nbPeDir" || return; }

	nbIsoDir="$nbDataDir/appconfig/netbootxyz/menus/ipxe"
	[[ ! -d "$nbIsoDir" ]] && { mkdir --parents "$nbIsoDir" || return; }

	return 0
}

#
# pe command
#

peCommand()
{
	local command; CheckSubCommand pe "$1"; shift
	[[ $# != 0 ]] && UnknownOption "$1"
	Pe${command}Command "$@"
}

PeMakeCommand()
{
	if [[ ! -d "$winPeDir" ]]; then
		hilight "Creating pe directory..."
		pe create || return
	fi

	hilight "Mounting boot image..."
	pe mount || return

	if IsElevated; then
		echo "Make modifications then exit this shell..."
		( cd "$winPeDir/mount"; zsh; )
	else
		start --elevate wt.exe -d "$winPeDir/mount"
		pause "Make modifications in the elevated terminal then press any key to continue..."
	fi

	if ! ask "Do you want to commit the changes to the boot image" -dr n; then
		hilight "Discarding changes to the boot image..."
		pe discard || return		
		exit 1
	fi	 
	
	hilight "Commiting changes to the boot image..."
	pe commit || return

	hilight "Creating the boot ISO..."
	pe iso || return

	hilight "Copying and extracting the PE image to $peDir..."
	PeCopyCommand || return

	hilight "Updating the netboot.xyz WinPE image..."
	PeNbcopyCommand || return
}

PeBakCommand()
{	
	local dir="$CLOUD/network/WinPE"
	[[ ! -d "$dir" ]] && { EchoErr "adk pe: cloud backup directory ($dir) does not exist"; return 1; }
	CopyFileProgress "$winPeDir/media/sources/boot.wim" "$dir" || return
}

PeCopyCommand()
{
	CopyFileProgress "$winPeDir/WinPE_amd64.iso" "$peDir" || return
	7z x "$peDir/WinPE_amd64.iso" -o"$peDir/WinPE_amd64" -y || return
}

PeNbcopyCommand()
{
	getNbPeDir || return
	CopyDir --recursive "$peDir/WinPE_amd64/" "$nbPeDir" || return
	CopyFileProgress "$peDir/WinPE_amd64.iso" "$nbIsoDir" || return
}

PeCommitCommand() { pe commit; }
PeDiscardCommand() { pe discard; }
PeMountCommand() { pe mount; }
PeIsoCommand() { pe iso; }

#
# helper
#

pe()
{
	local prefix; ! IsElevated && prefix="RunScript --elevate"
	$prefix cmd.exe /c WinPe.cmd "$1"
}

run "$@"
