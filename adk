#!/usr/bin/env bash
. function.sh || exit

	
	# /usr/local/data/bin*/usr/local/data/appdata/netbootxyz/windows/VERSION

run() {	init && args "$@" && ${command}Command "${args[@]}"; }

init() 
{
	:;
}

usage()
{
	echot "\
usage: adk
	Windows Application and Development Kit utilities

	pe 			make a Windows PE boot image"
	exit $1
}

args()
{
	declare -g args=() windowStyle="hidden"; unset -v command file # clears the variable

	[[ $# == 0 ]] && { command="show"; return; }

	while (( $# != 0 )); do
		case "$1" in "") : ;;
			-h|--help) usage 0;;
			one|OneAlias) command="one";; # case-insensitive commands
			*)
				! IsOption "$1" && [[ ! $file ]] && { file="$1"; shift; continue; }
				! IsOption "$1" && [[ ! $command ]] && { CheckCommand "$1"; command="${1,,}"; shift; continue; }
				! IsOption "$1" && [[ "$command" == @(sub) ]] && break
				UnknownOption "$1"
		esac
		shift
	done

	[[ ! $command ]] && { usage 1; }
	[[ ! $file ]] && MissingOperand "file"							# missing argument
	[[ ! -f "$file" ]] && { EchoErr "FileInfo: cannot access \`$file\`: No such file"; return 1; }
	[[ "$comamnd" == @(IsMounted|mount|UnMount) && ! $unc ]] && MissingOperand "unc"
	
	args=("$@")
}

#
# helper
#

getImageDir()
{
	imageDir="$(unc mount //nas3/root/usr/local/data)" || return
	peDir="/mnt/c/WinPE_amd64"
	nbDir="$imageDir/appdata/netbootxyz/windows/WinPE/x64"
	[[ ! -d "$peDir" ]] && { mkdir --parents "$peDir" || return; }
	
	return 0
}

#
# commands
#

peCommand()
{
	getImageDir || return


	# $win/WinPe.cmd - pass option create|mount|unmount|finalize|iso
	# C:\Program Files (x86)\Windows Kits\10\Assessment and Deployment Kit\Deployment Tools\DandISetEnv.bat
	# create - copype amd64 C:\WinPE_amd64

	# if peDir does not exist WinPe.cmd create
	# elevate WinPe.cmd mount
	# launch script in peDir/mount to customize
	# ask if you want to finalize if no unmount if yes , elevate WinPe.cmd finalize
	# WinPe.cmd iso
	# backup and clean peDir, extract iso to peDir
}

run "$@"


