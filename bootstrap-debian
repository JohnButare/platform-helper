#!/usr/bin/env bash

# bootstrap a Debian system (Ubuntu, Raspberry Pi)
# This script uses only what is available on a newly installed system.
# - (VMware Workstation VM) drag and drop to a terminal
# - (Hyper-V) enable shared drive

init()
{
	reboot=""
	user="${1:-jjbutare}"
	host="${2:-nas1}"
	dnsServers="192.168.100.2 192.168.100.1"
	dnsSuffix="hagerman.butare.net"
	eval $(cat /etc/os-release) # ID=ubuntu|raspbian
}

run()
{
	init || return
	checkDomain || return

	installCorePrograms || return
	createUser || return

	[[ "$USER" != "$user" ]] && { echo "Login as $user and run /tmp/bootstrap-debian"; exit; }

	mountPublic || return

	echo "Bootstrapping from $host..."
	export PATH=$HOME/Volumes/public/documents/data/bin:$PATH
	bootstrap $host
}

checkDomain()
{
	ping -c 1 $host >& /dev/null && return
	sudo systemd-resolve --set-domain=hagerman.butare.net --interface=eth0 || return
	sleep 5
	ping -c 1 $host
}

createUser()
{
	grep "$user" /etc/passwd >& /dev/null && return
	sudo adduser "$user" || return
	sudo usermod -aG sudo $user || return
	sudo chmod ugo+rwx /tmp/bootstrap-debian || return
}

installCorePrograms()
{
	which xclip >& /dev/null && return
	sudo apt-get update --fix-missing
	sudo apt-get install -y cifs-utils fping net-tools nmap openssh-server resolvconf || return	# network
	sudo apt-get install -y gnome-keyring libsecret-tools || return 														# credential management
	sudo apt-get install -y dialog expect gcp xclip || return																		# other, libgnome2 (gnome-open)
}

mountPublic() # mount //$host/public
{
	[[ ! $host || -d "$HOME/Volumes/public/documents/data/bin" ]] && return
	mkdir -p "$HOME/Volumes/public" || return
	line="//$host/public /home/$user/Volumes/public cifs username=$user,noauto,rw,users 0 0"
	! grep "$line" /etc/fstab >& /dev/null && { echo "$line" | sudo tee -a //etc/fstab || return; }
	mount.cifs "//$host/public" "$HOME/Volumes/public" -o user=$user sec=ntlmsspi || return
}

run "$@"
