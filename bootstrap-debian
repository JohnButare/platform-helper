#!/usr/bin/env bash

# bootstrap a debian system (allows us to run the generic bootstrp)

run()
{
	init || return
	installCorePrograms || return
	createUser || return
	configureNetwork || return

	[[ "$reboot" ]] && { echo "Rebooting to enable network configuration..."; sudo reboot; }
	[[ "$USER" != "$user" ]] && logoff

	mountPublic || return

	echo "Bootstrapping from $host..."
	export PATH=$HOME/Volumes/public/documents/data/bin:$PATH
	bootstrap $host
}

configureNetwork()
{
	local f="/etc/dhcpcd.conf"
	local interface="$(ifconfig | head -1 | cut -d: -f1)" # ens33 for Ubuntu

	ping -c 1 $host >& /dev/null && return
	reboot="true"

	if [[ "$ID" == "raspbian" ]]; then
		if ! grep "static domain_name_servers=$dnsServers" "$f" >& /dev/null; then
			echo "interface $interface" | sudo tee -a "$f"
			echo "static domain_name_servers=$dnsServers" | sudo tee -a "$f"
			echo "interface wlan0" | sudo tee -a "$f"
			echo "static domain_name_servers=$dnsServers" | sudo tee -a "$f"
		fi
	else # ubuntu
		sudo systemd-resolve --set-dns=$dnsServers --interface="$interface"
	fi

	f="/etc/resolvconf/resolv.conf.d/tail"
	if [[ ! -f "$f" ]] || ! grep "domain hagerman.butare.net" "$f" >& /dev/null; then
		echo domain $dnsDomain | sudo tee -a /etc/resolvconf/resolv.conf.d/tail
	fi
}

createUser()
{
	grep "$user" /etc/passwd >& /dev/null && return
	sudo adduser "$user" || return
	sudo usermod -aG sudo $user || return
	sudo chmod ugo+rwx /tmp/bootstrap-debian || return
}

installCorePrograms()
{
	which xclip >& /dev/null && return
	sudo apt-get update --fix-missing
	sudo apt-get install -y cifs-utils fping net-tools nmap openssh-server resolvconf || return	# network
	sudo apt-get install -y gnome-keyring libsecret-tools || return 														# credential management
	sudo apt-get install -y dialog expect gcp libgnome2-bin xclip || return											# other, libgnome2 (gnome-open)
}

mountPublic() # mount //$host/public
{
	[[ ! $host || -d "$HOME/Volumes/public/documents/data/bin" ]] && return
	mkdir -p "$HOME/Volumes/public" || return
	line="//$host/public /home/$user/Volumes/public cifs username=$user,noauto,rw,users 0 0"
	! grep "$line" /etc/fstab >& /dev/null && { echo "$line" | sudo tee -a //etc/fstab || return; }
	mount.cifs "//$host/public" "$HOME/Volumes/public" -o user=$user sec=ntlmsspi || return
}

init()
{
	reboot=""
	user="${1:-jjbutare}"
	host="${2:-nas1}"

	eval $(cat /etc/os-release) # ID=ubuntu|raspbian

	dnsServers="192.168.1.2 192.168.1.1"
	dnsSuffix="hagerman.butare.net"
}

run "$@"
