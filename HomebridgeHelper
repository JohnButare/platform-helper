#!/usr/bin/env bash
. script.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... backup|restore
$(ScriptName) commands."
}

init() 
{ 
	homebridgeDir="$HOME/.homebridge"
	[[ ! -d ~/.homebridge || -L ~/.homebridge ]] && homebridgeDir="/var/lib/homebridge"
	return 0
}

#
# Backup Command
#

backupUsage() { echot "Usage: $(ScriptName) backup [HOST]
Backup Homebridge configuration."}

backupArgs() { backupArgs=( "$@" ); shift="$#"; }

backupCommand()
{
	if [[ $backupArgs ]]; then
		backupRemote "${backupArgs[@]}"
	else
		[[ ! -d "$homebridgeDir" ]] && { ScriptErr "unable to locate the homebridge directory"; return 1; }
		AppBackup "$HOSTNAME.homebridge" "$homebridgeDir" || return
	fi
}

# /var/lib/homebridge
backupRemote()
{
	local host="$1"; shift; [[ ! $host ]] && { MissingOperand "host" || return 1; }	
	local file="$host.homebridge.zip"
	local dest="$(AppGetBackupDir)/$file" || return

	(( $# != 0 )) && usage

	# initialize
	bak --move "$dest" || return

	# backup
	hilight "Backing up $host Homebridge configuration..."
	ssh $host "rm -f $file; zip -r $file .homebridge" || return
	scp $host:~/$file "$dest" || return
	ssh $host "rm -f $file"

	echo "Homebridge backup of $host completed to $(FileToDesc "$dest")"
}

#
# Restore Command
#

restoreUsage() { echot "Usage: $(ScriptName) HOST FILE
Restore Homebridge configuration."}

restoreArgs()
{
	ScriptArgGet "host" -- "$@"
	ScriptArgGet "file" -- "$@" && { file="$file.homebridge.zip"; ScriptCheckFile "$file"; }
}

restoreCommand()
{
	ask -dr n "Are you sure you want to restore "$f" to $h" || return

	hilight "Restoring $host Homebridge configuration..."
	scp "$f" $h:~ || return
	ssh -t $h "sudo hb-service stop && sudo find ~/.homebridge -mindepth 1 -maxdepth 1 -exec rm -fr {} + && sudo unzip -o $f -d ~" || return
}

ScriptRun "$@"
