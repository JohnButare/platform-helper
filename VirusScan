#!/usr/bin/env bash
. app.sh || exit

usage() {	echot "usage: VirusScan [log|stats|start](start)
  hip [console|start|on|off|status](console) 		host intrusion prevention
  service auto|demand|status|start|stop"; exit $1; }

args()
{
	unset command help
	while (( $# != 0 )); do
		case "$1" in
			--help|-h) help="--help";;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";; # case-insensitive aliases
			*)
				! IsOption "$1" && [[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				[[ "${command}" == @(hip|service|start) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && { command="start"; }
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage 0 || usage 0; }
	args=( "$@" )
}

init()
{ 
	virusScanDir="$P32/McAfee/VirusScan Enterprise"
	logDir="$(wtu "$DEFLOGDIR")"
	console="$virusScanDir/mcconsol.exe"
	update="$virusScanDir/mcupdate.exe"
	stats="$virusScanDir/ShStat.exe"
	hipConsole="$P32/McAfee/Host Intrusion Prevention/McAfeeFire.exe"
	program="$console"
}

run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }
logCommand() { TextEdit "$logDir/AccessProtectionLog.txt"; }
statsCommand() { start "$stats"; }
closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } # task close|CloseKill [--wait] [--title "$title"] "$program"; ProcessKill "$program"; SendKeys "$title" "!FX"; 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";

startCommand()
{
	! IsInstalledCommand && return 1; IsRunningCommand && return 0
	start "$program" "$@"
}

hipCommand() 
{  
	! IsInstalledCommand && return 0
	local command="Console"; [[ $# > 0 ]] && ProperCase "$1" command; IsFunction Hip${command}Command && shift;
	[[ $# != 0 ]] && UnknownOption "$1"

	Hip${command}Command "$@"
}

HipConsoleCommand() { start "$hipConsole"; }
HipStartCommand() { start "$hipConsole" /0; }
HipStatusCommand() { service status enterceptAgent; }
HipOffCommand() { service disable enterceptAgent || return; echo "Restart required..."; } # Host Instrusion Protection causes slower program load if Windows firewall is used, disable on non-Intel builds
HipOnCommand() { service auto enterceptAgent || return; echo "Restart required..."; }

serviceCommand() 
{  
	! IsInstalledCommand && return 0
	local command="Status"; [[ $# > 0 ]] && ProperCase "$1" command; IsFunction Service${command}Command && shift;
	[[ $# != 0 ]] && UnknownOption "$1"

	if [[ "$command" == @(auto|demand|stop) && "$USER" != "$COMPUTERNAME\$" ]]; then
		cygstart cmd /k psexec -s bash -i VirusScan service $command
	else
		Service${command}Command "$@"
	fi
}

ServiceFixPermissions() 
{ 
	sc sdset McShield "D:(A;;CCLCSWRPWPDTLOCRRC;;;SY)(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;BA)(A;;CCLCSWLOCRRC;;;IU)(A;;CCLCSWLOCRRC;;;SU)S:(AU;FA;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;WD)" || return;
}

ServiceAutoCommand()
{ 
	ServiceFixPermissions || return
	service auto McShield || return
	service auto McAfeeFramework || return
	service auto McTaskManager || return
}

ServiceDemandCommand() 
{ 
	ServiceFixPermissions || return
	service demand McShield || return
	service demand McAfeeFramework || return
	service demand McTaskManager || return
}

ServiceStatusCommand()
{ 
	service status McShield || return
	service status McAfeeFramework || return
	service status McTaskManager || return
}

ServiceStartCommand() 
{ 
	service start McAfeeFramework
	service start McShield
	service start McTaskManager
}

ServiceStopCommand() 
{
	ServiceFixPermissions || return
	service stop McShield || return
	service stop McAfeeFramework || return
	service stop McTaskManager || return
}

run "$@"