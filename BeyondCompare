#!/bin/bash
. app.sh

usage() {	echot "usage: BeyondCompare [start|close|command](start)
  profile dir|SaveDir|backup|restore [<profile name>|default](latest)"; exit $1; }

init()
{ 
	program="$P32/Beyond Compare 3/BCompare.exe"
	programMultiple="$P32/Beyond Compare 3/BComp.exe"
	programCommand="$P32/Beyond Compare 3/BComp.com"
}

args()
{
	unset wait
	while [[ "$1" != "" ]]; do
		case "$1" in
			-w|--wait) wait="--wait";;
			-h|--help) usage 0;;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";; # case-insensitive aliases
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }	# command
				[[ "$command" == @(start|startup|profile|command) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='start'
	args=( "$@" )
}

commandCommand()
{
	! IsInstalledCommand && return 1; 
	start --direct "$programCommand" "$@"
}

startCommand()
{
	! IsInstalledCommand && return 1; IsRunningCommand && return 0
	start $wait "$programMultiple" "$@"
}

run() {	init; args "$@"; ${command}Command "${args[@]}"; }
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";
closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } 
restartCommand() { closeCommand && startCommand; }
profile() {	profile --app "BeyondCompare" --method "$program" --save-extension="bcpkg" "$@" || usage; }
	
run "$@"