#!/usr/bin/env bash
. app.sh

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|profile|program|restart|start|startup](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	profileName="BeyondCompare"

	# bcomp - waits for comparison to complete 
	if IsPlatform win; then program="$P/Beyond Compare 4/BCompare.exe" bcomp="$program"
	elif IsPlatform debian; then program="/usr/bin/bcompare"; bcomp="$program"
	elif IsPlatform mac; then program="$P/Beyond Compare.app/Contents/MacOS/BCompare" bcomp="$P/Beyond Compare.app/Contents/MacOS/bcomp"
	else unset program
	fi
	[[ "${1,,}" == "isinstalled" ]] && { isInstalledCommand; return; }
	[[ ! -f "$program" ]] && { ScriptErr "$(ScriptName) is not installed"; return 1; }

	return 0
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -f "$program" ]]; }
isRunningCommand() { IsTaskRunning "$program"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { isInstalledCommand && start $wait "$bcomp" "${startArgs[@]}"; }
startupCommand() { startCommand; }

#
# Profile Command
#

profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }
									 
profileCommand() 
{	
	local command="${profileArgs[0]}"	

	[[ "$command" == "backup" ]] && echo "- Tools, Export settings...,"
	[[ "$command" == "restore" ]] && echo "- Tools, Import settings...,"
  
  profile $noPrompt --app "$profileName" --method "$program" --save-extension "bcpkg" "${profileArgs[@]}" || return;
}
	
ScriptRun "$@"
