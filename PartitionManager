#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [start](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	partitionAssistant="$P32/AOMEI Partition Assistant/PartAssist.exe"
}
									 
#
# Start Command
#

startUsage()
{
	echot "Uage: $(ScriptName)
Start the partition manager.

	-a, --alternate	start an alternate partition manager
	-l, --linux			only start the Linux partition manager
	-w, --win				only start the Windows partition manager"
}

startArgStart() { unset -v linux win; }

startOpt()
{
	case "$1" in "") : ;;
		-a|--alternate) alternate="true";;
		-l|--linux) linux="true";;
		-w|--win) win="true";;
		*) return 1;;
	esac
}

startCommand() 
{ 
	! HasWindowManager && { EchoErr "No partition manager is available"; return 1; }
	RunPlatform start || return
}

startLinux()
{
	if InPath partitionmanager; then ( sudox partitionmanager & ) >& /dev/null
	elif [[ ! $alternate ]] && InPath gparted; then ( sudox gparted & ) >& /dev/null
	elif InPath gnome-disks; then ( sudox gnome-disks & ) >& /dev/null
	else noPatitionManager
	fi
}

startMac() { start "Disk Utility.app"; }

startWin()
{
	if [[ ! $linux ]]; then
		if [[ -f "$partitionAssistant" ]]; then elevate "$partitionAssistant"
		else elevate diskmgmt.msc
		fi
	fi

	[[ ! $win ]] && { startLinux || return; }

	return 0
}

#
# helper
#

noPatitionManager() { ScriptErrQuiet "no partition manager is installed"; return 1; }

ScriptRun "$@"
