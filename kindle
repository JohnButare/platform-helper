#!/usr/bin/env bash
. app.sh || exit

usage() {	echot "usage: templateApp [start|startup|close|restart|decrypt](start)"; exit $1; }

args()
{
	unset -v brief help
	command="start"
	while (( $# != 0 )); do
		case "$1" in
			--brief|-b) brief="--brief";;	
			--help) help="--help";;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";;
			*)
				! IsOption "$1" && { CheckCommand "$1"; shift; continue; }
				[[ "${command}" == @(start|decrypt) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && { command="start"; }
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage 0 || usage 0; }
	args=( "$@" )
}

init()
{ 
	program="$P32/Amazon/Kindle/Kindle.exe"
	decryptProgram="$P32/eBookConverter/Kindle DRM Removal/KindleDRM.exe"
}

run() {	args "$@" || return; init || return; ${command}Command "${args[@]}"; }
closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } # task close|CloseKill [--wait] [--title "$title"] "$program"; ProcessKill "$program"; SendKeys "$title" "!FX"; 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";
profileCommand() {	profile --app "BeyondCompare" --method "<dir|exe|registry key|$program>" --files "*.ini *.xml" --save-extension "bcpkg" "$@"; }
restartCommand() { closeCommand && startCommand; }

startCommand()
{
	! IsInstalledCommand && return 1; IsRunningCommand && return 0
	start "$program" "$@"
}

decryptCommand()
{
	[[ ! -f "$decryptProgram" ]] && return -;
	start "$decryptProgram" "$@"
}

run "$@"