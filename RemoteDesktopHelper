#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [cli|close|IsInstalled|IsRunning|profile|program|restart|start|startup|stop|version](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"

	# find program
	unset -v program profile

	if program="$P/Windows App.app" && [[ -d "$program" ]]; then
		app="WindowsApp"
		profileName="WindowsApp"
		profileDir="$HOME/Library/Containers/com.microsoft.rdc.macos/Data/Library/Preferences"
		profileMask="com.microsoft.rdc.macos.plist"

	else ScriptErr "unable to find a remote desktop application"
	fi
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
profileUsage() { ScriptUsageEcho "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgStart() { AppInstallCheck; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { [[ ! $profileName ]] && return; profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startupCommand() { [[ ! $force ]] && isRunningCommand && return; AppInstallCheck && start "$program"; }
stopCommand() { closeCommand; } 
versionCommand() { AppInstallCheck && AppVersion "$program"; }

#
# start command
#

startUsage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) start [host]
Start (connect) commands.
	
 	-fs, --full-screen		connect using the full screens"
}

startArgStart() { unset -v fullScreen; }

startOpt()
{
	case "$1" in
		--full-screen|-fs) fullScreen="--full-screen";;
		*) return 1;;
	esac
}

startArgs() { startArgs=( "$@" ); shift="$#"; }

startCommand() { AppInstallCheck && RunFunction "start" "$app"; }
	
startWindowsApp()
{	
	[[ ! $startArgs ]] && { RunLog start "$program"; return; }
	
	local rdp; 
	rdp="rdp://full%20address=s%3A${startArgs[0]}&username=s%3A$USER"
	[[ $fullScreen ]] && rdp+="&screen%20mode%20id=i:2"
	RunLog open -a "$program" "$rdp"
}


ScriptRun "$@"
