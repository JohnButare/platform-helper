#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|profile|program|start|service](start)
LogitechOptions commands."
}

init()
{
	defaultCommand="start"
	profileName="LogitechOptions$(ProperCase "$PLATFORM")"

	# find program
	case "$PLATFORM" in
		mac) program="$P/Logi Options.app";;
		win) program="$WIN_ROOT/ProgramData/Logishrd/LogiOptions/Software/Current/LogiOptionsUI.exe";;
		*) unset program;;
	esac
	[[ ! -e "$program" ]] && { ScriptErr "Logitech Options is not installed"; return 1; }

	# find profile directory
	case "$PLATFORM" in
		mac) profileDir="$HOME/Library/Preferences" profileMask="com.logitech.manager.setting.0006b01a.plist";;
		win) profileDir="$ADATA/../Roaming/Logishrd/LogiOptions" profileMask="@";;
	esac
	[[ ! -d "$profileDir" ]] && { ${G}mkdir --parents "$profileDir" || return; }
	
	return 0
}

isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsTaskRunning "$program"; }
programCommand() { echo "$program"; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { isInstalledCommand && start "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }

closeCommand()
{
	case "$PLATFORM" in
		win) ProcessKill LogiOptionsMgr.exe >& /dev/null;;
	esac
	
	return 0
}

#
# Profile Command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }

profileCommand()
{
	[[ "${profileArgs[0]}" == "restore" ]] && { serviceStopCommand || return; }
	profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}" || return; 
	[[ "${profileArgs[0]}" == "restore" ]] && { serviceStartCommand || return; }
	return 0
}

#
# Service Command
#

serviceUsage() 
{
	echot "\
Usage: $(ScriptName) service start|stop
LogitechOptions service commands."
}

serviceCommand() { usage; }

serviceStartCommand()
{
	case "$PLATFORM" in
		mac) service start "com.logitech.manager.daemon";;
		win) start "$program";;
	esac
	
	return 0
}

serviceStopCommand()
{
	case "$PLATFORM" in
		mac) service stop "com.logitech.manager.daemon";;
		win)
			ProcessKill LogiOptionsMgr.exe >& /dev/null
			ProcessKill LogiOverlay.exe >& /dev/null
			;;
	esac
	
	return 0
}

ScriptRun "$@"
