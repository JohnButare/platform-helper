#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|profile|program|restart|start|startup](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	program="$P/Rectangle.app"
	profileName="rectangle"
	profileDir="$HOME/Library/Preferences"; [[ ! -d "$profileDir" ]] && { ${G}mkdir --parents "$profileDir" || return; }
	profileMask="com.knollsoft.Rectangle.plist"

	# find program and profile
	case "$PLATFORM" in
		linux) 
			program="$P/firefox/firefox"
			if [[ ! -f "$program" ]]; then program="/opt/firefox/firefox"
			elif [[ ! -f "$program" ]]; then program="/usr/lib/firefox/firefox"
			elif [[ ! -f "$program" ]]; then program="/usr/lib/firefox-esr/firefox-esr"
			elif [[ ! -f "$program" ]]; then program="/snap/firefox/current/firefox"
			fi
			;;
		mac) program="$P/Firefox.app";;
		win) program="$P/Mozilla Firefox/firefox.exe";;
		*) unset program;;
	esac
	[[ "${1,,}" == "isinstalled" ]] && { isInstalledCommand; return; }
	[[ ! -e "$program" ]] && { ScriptErr "$(ScriptName) is not installed"; return 1; }
	[[ ! -d "$profileDir" ]] && { ${G}mkdir --parents "$profileDir" || return; }

	return 0
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsTaskRunning "$program"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { isInstalledCommand && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }
									 
#
# Profile Command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }

profileCommand()
{
	case "${profileArgs[0]}" in
		backup) echo "- Simple Tab Groups, gear, Backup, check Include tab fav-icons in backup, Create backup";;
		restore) echo "- Simple Tab Groups, gear, Backup, Restore backup";;
	esac

	profile $noPrompt --app "SimpleTabGroups" --method "firefox" --save-extension "json" "${profileArgs[@]}" || return
}

ScriptRun "$@"
