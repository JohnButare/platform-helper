#!/usr/bin/env bash
. function.sh

SshEnv="$HOME/.ssh/environment"

function startCommand
{
	local result
	ssh-agent | sed 's/^echo/#echo/' > "${SshEnv}"
	chmod 600 "$SshEnv"
	. "$SshEnv" > /dev/null

	if [[ "$PLATFORM" == "win" ]] && which wincred.exe > /dev/null && password="$(wincred.exe get ssh:$USERNAME 2> /dev/null)"; then
		ssh-add-helper $password >& /dev/null
		result="$?"
	else	
		ssh-add |& grep -v "Identity added:" >& /dev/null
		result="${PIPESTATUS[0]}"
	fi

	if [[ $result == 0 ]]; then
		echo "Identity for $USERNAME has been added to the SSH agent"
	else
		EchoErr "Unable to add identity for $USERNAME to the SSH agent"
	fi

	return "$result"
}

Usage()
{
	echot "usage: SshAgent cleanup fix start startup"
	exit 1
}

function initializeCommand()
{
	[[ -f "${SshEnv}" ]] && cat "${SshEnv}"
}

function startupCommand()
{
	if [ -f "${SshEnv}" ]; then
		. "${SshEnv}" > /dev/null
		ProcessList | grep ^$SSH_AGENT_PID,ssh-agent > /dev/null || { cleanupCommand; startCommand; }
	else
		cleanupCommand
		startCommand
	fi
}

fixCommand()
{
	[[ "$PLATFORM" == "win" ]] && { AutoHotKey close || return; }
	cleanupCommand || return
	startCommand || return
	ScriptEval SshAgent initialize  || return
	[[ "$PLATFORM" == "win" ]] && { AutoHotKey startup || return; }
	return 0
}

cleanupCommand()
{
	ProcessKill ssh-agent &> /dev/null
	rm -fr "/tmp/ssh-"*
}

[[ -d "$HOME/.ssh" ]] || exit 0
{ [[ $# == 0 ]] || ! IsFunction ${1}Command; } && Usage
${1}Command ${@:2}
exit $?
