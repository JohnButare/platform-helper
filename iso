#!/usr/bin/env bash
. function.sh || exit

usage()
{
	echot "/
usage: iso [mount|dismount](mount) FILE...
	Mount or dismount the specified ISO image.
	Uses Windows iso mounting by default, which fails on Windows 8.x with ISO images on Synology nas.
	For Windows 8.x, mount ISO from a Windows machine or use Virtual CloneDrive."
	exit $1
}

args()
{
	unset files
	while (( $# != 0 )); do
		case "$1" in
			-h|--help) IsFunction "${command}Usage" && ${command}Usage || usage 0;;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ -f "$1" ]] && { files+=( "$1" ); shift; continue; }
				EchoErr "iso: cannot access /`$1/`: No such file"; return 1;;
		esac
		shift
	done
	command="${command:-mount}"
	args=("$@")
}

init()
{
	platform="win"

	# http://www.slysoft.com/en/virtual-clonedrive.html
	cloneDrive="$P32/Elaborate Bytes/VirtualCloneDrive/VCDMount.exe"
	[[ -f "$cloneDrive" ]] && platform="winold"
}

run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }

dismountCommand() 
{ 
	for file in "${files[@]}"; do
	  	echo "Dismounting $(GetFileName "$file")..."
	  	dismount$platform "$file" || return
	done	
}

mountCommand()
{
	for file in "${files[@]}"; do
	  	echo "Mounting $(GetFileName "$file")..."
	  	mount$platform "$file" || return
	done	
}

mountwin() { powershell Mount-Diskimage -ImagePath "\"$(utw "$file")\""; }
dismountwin() { powershell DisMount-Diskimage -ImagePath "\"$(utw "$file")\""; }
mountwinold() { "$cloneDrive" "$file" || return; }
dismountwinold() { "$cloneDrive" /d=0 /u; "$cloneDrive" /d=1 /u; }

run "$@"
