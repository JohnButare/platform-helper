#!/usr/bin/env bash
#-x (debug) -v (verbose)
. function.sh || exit

usage()
{
	echot "\
usage: password
	change [ChangeNas] [ChangeCredentialStore] [USER](current) [PASSWORD]"
	exit $1
}

args()
{
	unset command help dest exclude file show arg1 arg2
	versions=( 2013 2012 )
	while (( $# != 0 )); do
		case "$1" in
			--help) help="--help";;
			ChangeNas) command="ChangeNas";; ChangeCredentialStore) command="ChangeCredentialStore";;
			*)
				[[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				[[ "$command" == @(change|ChangeNas|ChangeCredentialStore) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage || usage 0; }
	[[ ! $command ]] && { MissingOperand "command"; }
	args=("$@")
}

init() { :; }
run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }

changeCommand()
{
	IsInDomain && { echo "ctrl-alt-del / ctrl-win-del (VMware) / ctrl-alt-end (Remote Desktop), Change Password"; return 0; }	

	local passowrd
	case $# in
		0) user="$USER";;
		1) password=$1;;
		2) user="$1"; password="$2";;
		*) usage 1
	esac
	
	[[ "$PLATFORM" == "win" ]] && { sudo --wait run.sh --multiple 'pspasswd "'$user'" "'$password'"; pause'; return; }
	passwd "$user"
}

ChangeNasCommand()
{
	[[ $# != 2 ]]	&& usage 1
	local user="$1" password="$2"

	#read -s -p "Enter $user current butare.net LDAP password: " ldapPassword; echo
	#ssh nas ldappasswd -x -D "uid=$user,cn=users,dc=butare,dc=net" -w "$ldapPassword" -s "$password" "uid=$user,cn=users,dc=butare,dc=net" || return
	#echo "$user@butare.net password successfully changed"
	#echo 

	if HostUtil available nasc; then
		ssh root@nasc /usr/syno/sbin/synouser -setpw "$user" "$password" || return
	fi

	if HostUtil available nas; then
		ssh root@nas /usr/syno/sbin/synouser -setpw "$user" "$password" || return
	fi

	echo "nas $user password successfully changed"
	echo
}

ChangeCredentialStoreCommand()
{
	local user password

  if (( $# == 0 )); then
  	user="$USER"
  	read -s -p "Enter $user password: " password; echo
  elif (( $# == 1 )); then
  	user="$1"
  	read -s -p "Enter $user password: " password; echo
  elif (( $# == 2 )); then
  	user="$1"
  	password="$2"
  else
  	usage 1
  fi

	if intel IsIntelHost; then
		WinCred set "git:https://github.intel.com" "$user" "$password" || return
		WinCred set "git:https://${user}@github.intel.com" "$user" "$password" || return
		WinCred set "CCTray:$user" "$user" "$password" || return
	fi

	read -s -p "Enter $user ssh password: " sshPassword; echo
	WinCred set "ssh:$user" "$user" "$sshPassword" || return

	echo "$user Windows Credential Store credentials successfully added or updated"
	echo 
}

run "$@"
