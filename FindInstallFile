#!/usr/bin/env bash
. function.sh

usage()
{
	echot "\
usage: FindInstallFile FILE
	Find an installation file or directory from known locations.  Searches 
	INSTALL_DIR if defined.  
	-e, --eval				return variables to evaluate (InstallDir and file)
	-h, --hint DIR 		first directory to search
	-q, --quiet				do not display status messages
	-s, --select			select the install location
			--suppress		suppress error messages
			--help 				display this help and exit"
	exit $1
}

args()
{
	unset eval fileSuffix hint quiet select suppress
	while [ "$1" != "" ]; do
		case "$1" in
			--eval|-e) eval="true";;
			--hint|-h) hint="$2"; shift;;
			--quiet|-q) quiet="true";;
			--select|-s) select="true";;
			--suppress) suppress="true";;
			--help) IsFunction "${command}Usage" && ${command}Usage || usage 0;;
			*)
				! IsOption "$1" && [[ ! $fileSuffix ]] && { fileSuffix="$1"; shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done
	args=("$@")
}

AddDirs()
{
	local ip="$(GetPrimaryIpAddress)"; network="${ip%%.*}"

	AddLocalDirs || return

 	# Wiggin
	if [[ "$COMPUTERNAME" == @(MiniMe|oversoul) || "$USER" == @(jjbutare|ad_jjbutare) ]]; then
		AddDir nas "//nas/public/Documents/data/install"
		intel IsIntelHost && AddDir nas_ip "//192.168.1.3/public/Documents/data/install" # Intel VPN breaks local DNS
	fi
	
	# Intel
	if IsVm || (( network == 10 )); then 
		AddDir Intel-NM "//rrsprsps.amr.corp.intel.com/d$/install"
		AddDir Intel-Build "//CsisBuild.intel.com/d$/install"
		AddDir Intel-BuildDr "//CsisBuild-dr.intel.com/d$/install"
		AddDir Intel-CR "//VMSPFSFSCR02.cr.intel.com/CsisInstall/install"
		
		# DFS - \\amr.corp.intel.com\corpsvcs\InstallDev\install
		AddDir Intel-AZ "//azsfs001.amr.corp.intel.com/corpsvcs/InstallDev/install"
		AddDir Intel-FM "//fmsfs001.amr.corp.intel.com/corpsvcs/InstallDev/install"
		AddDir Intel-OR "//vmspadfsor01.amr.corp.intel.com/corpsvcs/InstallDev/install"
	fi

}

AddLocalDirs()
{
	[[ -d "$DATA/install" ]] && AddDir "local-data" "$DATA/install" 

	local disks; GetDisks disks
	for disk in "${disks[@]}"; do
		[[ -d "$disk/install" ]] && AddDir "local-drive-$(GetFileName "$disk")" "$disk/install"
		[[ -d "$disk/Users/Public/install" ]] && AddDir "local-drive-$(GetFileName "$disk")" "$disk/Users/Public/install"
	done

	return 0
}

AddDir() { dirs["$1"]+="$2"; }

CheckDir()
{
	local dir="$1"

	IsUncPath "$dir" && { dir="$(unc mount "$dir")" || return; }

	if [[ -e "$dir/$fileSuffix" ]]; then
		InstallDir="$dir"
		file="$dir/$fileSuffix"
		return 0
	fi
	return 1
}

CheckServerAvailability()
{
	[[ ! $quiet ]] && PrintErr "checking..." 

	for key in "${!dirs[@]}"; do
		local dir="${dirs["$key"]}" server
		unset dirs["$key"]
		GetUncServer "$dir" server; [[ ! $server ]] && { AddDir "0-$key" "$dir"; continue; }
		ScriptEval HostUtil available "$server" --eval && AddDir "$pingTime-$key" "$dir"
		[[ ! $quiet ]] && PrintErr "." 
	done
	[[ "${#dirs[@]}" == "0" ]] && return 0

	readarray -t closestKeys < <(printf '%s\0' "${!dirs[@]}" | sort --numeric --zero-terminated | xargs -0n1)

	return 0
}

FindClosest()
{
	local items

	[[ $hint ]] && CheckDir "$hint" && return
	[[ $INSTALL_DIR ]] && CheckDir "$INSTALL_DIR" && return

	# check local dirs
	for key in "${!dirs[@]}"; do
		local dir="${dirs["$key"]}" server
		GetUncServer "$dir" server; [[ $server ]] && continue
		CheckDir "$dir" && return
		unset dirs["$key"]
	done

	CheckServerAvailability || return
	
	for key in "${closestKeys[@]}"; do
		[[ ! $quiet ]] && PrintErr "${key#*-}..." 
		CheckDir "${dirs["$key"]}" && { [[ ! $quiet ]] && EchoErr "found"; return 0; }
	done

	[[ ! $quiet ]] && EchoErr "not found"
	[[ ! $suppress ]] && EchoErr "FindInstallFile: Could not locate ${fileSuffix:-the installation directory}"
	return 1
}

Select()
{
	[[ $hint ]] && AddDir "$hint" "$hint"

	CheckServerAvailability || return

	local items=( )
	for key in "${closestKeys[@]}"; do
		local dir="${dirs["$key"]}" desc="${key#*-}" ms="${key%%-*}ms away"
		items+=( "$desc" "$ms" )
		unset dirs["$key"]; AddDir "$desc" "$dir"
	done

	if (( ${#items[@]} == 0 )); then
		[[ ! $quiet ]] && EchoErr "not found"
		[[ ! $suppress ]] && EchoErr "FindInstallFile: Could not locate any installation servers"
		return 1
	fi

	while true; do
		local result=$(dialog --stdout --backtitle "Select Installation Location" \
	  	--menu "Choose the location to search for:\n$fileSuffix" $(($LINES-5)) 50 $(($LINES)) "${items[@]}")
		[[ "$result" == "" ]] && return 1
		[[ ! $quiet ]] && PrintErr "checking...$result..."
		CheckDir "${dirs[$result]}" && { [[ ! $quiet ]] && EchoErr "found"; return; }
		[[ ! $quiet ]] && EchoErr "not found"
		[[ ! $suppress ]] && EchoErr "FindInstallFile: ${fileSuffix:-the installation directory} is not located on $result"
		pause
	done

}

run() 
{	
	local -A dirs; local closestKeys
	args "$@" || return; 
	AddDirs || return
	[[ $select ]] && { Select || return; } || { FindClosest || return; }
	[[ $eval ]] && { ScriptReturn InstallDir file; true; } || { echo "$file"; true; }
}

run "$@"
