#!/bin/bash
. function.sh || exit

usage()
{
	echot "usage: firewall [console|disable|enable|enabled|log|panel|rule|status](console)
  rule "; exit $1
}

ruleUsage() { echot "\
usage: firewall rule add|delete|enable|disable|exist|status NAME
	add NAME RULES"; exit $1; }

args()
{
	unset command help dest exclude file show arg1 arg2
	while (( $# != 0 )); do
		case "$1" in
			--host|-h) host="$2"; shift;; # single argument
			--help) help="--help";;
			*)
				[[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				[[ "$command" == @(rule) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && { command="console"; }
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage || usage 0; }
	args=("$@")
}

init() { :; }
run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }
panelCommand() { start firewall.cpl; }
consoleCommand() { start wf.msc; }
enableCommand() { netsh advfirewall set currentprofile state on; }
disableCommand() { netsh advfirewall set currentprofile state off; }
statusCommand() { netsh advfirewall show currentprofile; }
enabledCommand() { netsh firewall show state | grep -i "Operational Mode" | grep Enable > /dev/null; }

logCommand()
{
	local p; [[ $host ]] && p="//$host/admin\$" || p="$WINDIR"
	local file="$p/system32/LogFiles/Firewall/pfirewall.log"
	[[ ! -f "$p" ]] && { EchoErr "firewall: cannot access \`$file\`: No such file"; return 1; }
	TextEdit "$file"
}

ruleCommand()
{
	local command; CheckSubCommand rule "$1"; shift
	local name="$1"; shift; [[ ! $name ]] && MissingOperand "name"; 
	[[ "$command" != "add" && $# != 0 ]] && UnknownOption "$1"
	Rule${command}Command "$@"
}

RuleAddCommand()  
{ 
	local command="add" new; RuleExistCommand && { command="set"; new="new"; }
	printf "firewall: adding rule $name..."
	netsh advfirewall firewall $command rule name="$name" $new "$@"
}

RuleDeleteCommand() { ! RuleExistCommand && return; netsh advfirewall firewall delete rule name="$name"; }
RuleEnableCommand() { ! RuleExistCommand && return; netsh advfirewall firewall set rule name="$name" new enable=yes; }
RuleDisableCommand() { ! RuleExistCommand && return; netsh advfirewall firewall set rule name="$name" new enable=no; }
RuleExistCommand() { RuleStatusCommand > /dev/null;}
RuleStatusCommand() { netsh advfirewall firewall show rule name="$name"; }

run "$@"
