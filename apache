#!/usr/bin/env bash
. script.sh || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) deploy|dir|log|profile|sync
Additional Apache web server functionality."
}

init()
{
	unset baseDir profileDir profileFiles

	# container defaults
	if [[ -d "$SRV/apache-web" ]]; then
		baseDir="$SRV/apache-web"
		confDir="$baseDir/conf"
		logDir="$baseDir/log"
		webDir="$baseDir/htdocs"
		profileDir="$baseDir"
		profileFiles="conf htdocs docker-compose.yml"

	# Ubuntu package defaults
	elif [[ -d "/var/www/html" ]]; then
		confDir="/etc/apache2"
		logDir="/var/log/apache2"
		webDir="/var/www/html"

	# homebrew defaults
	elif [[ $HOMEBREW_PREFIX && -d "$HOMEBREW_PREFIX/var/www" ]]; then
		confDir="/private/etc/apache2"
		logDir="/var/log/apache2"
		webDir="$HOMEBREW_PREFIX/var/www"
		
	else
		[[ ! $quiet ]] && ScriptErr "Apache is not installed"
		return 1

	fi

	# default profile
	[[ ! $profileDir ]] && { profileDir="$webDir"; profileFiles="*"; }

	return 0
}

#
# commands
#

logUsage() { echot "Usage: $(ScriptName) log\nShow the log file."; }
logCommand() { LogShow "$logDir/access.log"; } 

restartCommand() { service restart apache2; }

#
# deploy command
#

deployUsage() { echot "Usage: $(ScriptName) deploy\nDeploy web site directories by setting ownership and permissions.\n\n$hostUsage"; }
deployArgStart() { unset hostArg hostOpt hosts ; }
deployOpt() { ScriptOptHost "$@"; }
deployCommand() { ForAllHosts deploy; }
 
# deploy HOST
deploy()
{
	local host="${1:-localhost}" dir="$baseDir" group="apache-web"
	
	hilight "Deploying Apache web directories to $(RemoveDnsSuffix "$host")..." 
	RunLog RunScript --ssh "$host" "$(cat <<-EOF
		GroupAddUser "$group" || exit
		sudoc mkdir --parents "$dir" || exit
		sudo chown -R "root" "$dir" || exit
		sudo chgrp -R "$group" "$dir" || exit
		sudo find "$dir" -type d | xargs --no-run-if-empty -r sudo chmod 775 || exit
		sudo find "$dir" -type f | xargs --no-run-if-empty -r sudo chmod 664 || exit
		EOF
	)"
}

#
# dir command
#

dirUsage()
{
	echot "Usage: $(ScriptName) dir [conf|log|web](web)
Return the path to an Apache directory."
}

dirCommand() { dirWebCommand; }
dirConfCommand() { echo "$confDir"; }
dirLogCommand() { echo "$logDir"; }
dirWebCommand() { echo "$webDir"; }

#
# profile command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\nWeb site configuration."; }
profileArgStart() { profileArgs=(); }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }
profileCommand() { profile $noPrompt --sudo --app "apache-web" --method "$profileDir" --files "$profileFiles" "${profileArgs[@]}"; }

#
# sync command
#

syncUsage() { echot "Usage: $(ScriptName) sync\nSyncronize web site files.\n\n$hostUsage"; }
syncArgStart() { unset hostArg hosts; }
syncOpt() { ScriptOptHost "$@"; }
syncCommand() { ForAllHosts sync; }

# sync HOST
sync()
{
	[[ ! $baseDir ]] && { ScriptErr "no base directory"; return 1; }

	local host="$1"; IsLocalHost "$host" && return # do not sync the source	

	# unison arguments
	local src="$baseDir" dest="ssh://root@$host/$baseDir" args=(-ignore 'Path logs')
	[[ $noPrompt ]] && args+=(-batch)
	[[ $force ]] && args+=(-force "$src")

	# syncronize
	hilight "Synchronizing Apache web directories with $(RemoveDnsSuffix "$host")..."	
	RunLog sudor unison "${args[@]}" "$src" "$dest"
}
ScriptRun "$@"
