#!/usr/bin/env bash
. script.sh || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) deploy|dir|IsInstalled|log|profile|sync
Additional Apache web server functionality."
}

init()
{
	unset baseDir profileDir profileFiles

	syncDir="/srv/apache-web"

	# Ubuntu package defaults
	if [[ -d "/var/www/html" ]]; then
		confDir="/etc/apache2"
		logDir="/var/log/apache2"
		webDir="/var/www/html"

	# homebrew defaults
	elif [[ $HOMEBREW_PREFIX && -d "$HOMEBREW_PREFIX/var/www" ]]; then
		confDir="/private/etc/apache2"
		logDir="/var/log/apache2"
		webDir="$HOMEBREW_PREFIX/var/www"

	# container defaults
	else
		baseDir="$SRV/apache-web"
		confDir="$baseDir/conf"
		logDir="$baseDir/log"
		webDir="$baseDir/htdocs"
		profileDir="$baseDir"
		profileFiles="conf htdocs docker-compose.yml"
	
	fi

	# default profile
	[[ ! $profileDir ]] && { profileDir="$webDir"; profileFiles="*"; }

	return 0
}

#
# commands
#

isInstalledCommand() { [[ $confDir ]]; }

logUsage() { echot "Usage: $(ScriptName) log\nShow the log file."; }
logCommand() { LogShow "$logDir/access.log"; } 

restartCommand() { service restart apache2; }


#
# deploy command
#

deployUsage() { echot "Usage: $(ScriptName) deploy\nDeploy web site directories by setting ownership and permissions.\n\n$hostUsage"; }
deployArgStart() { unset hostArg hostOpt hosts; }
deployOpt() { ScriptOptHost "$@"; }
deployCommand() { ForAllHosts deploy; }
 
# deploy HOST
deploy()
{
	[[ ! $baseDir ]] && { ScriptErr "the Apache base directory is not defined."; return 1; }
	
	local host="${1:-localhost}" dir="$baseDir" group="apache-web"
	
	hilight "Deploying Apache web directories to $(RemoveDnsSuffix "$host")..." 
	RunLog RunScript --ssh "$host" "$(cat <<-EOF
		GroupAddUser "$group" || exit
		sudoc ${G}mkdir --parents "$dir" || exit
		sudo chown -R "root" "$dir" || exit
		sudo chgrp -R "$group" "$dir" || exit
		sudo find "$dir" -type d | xargs --no-run-if-empty -r sudo chmod 775 || exit
		sudo find "$dir" -type f | xargs --no-run-if-empty -r sudo chmod 664 || exit
		EOF
	)"
}

#
# dir command
#

dirUsage()
{
	echot "Usage: $(ScriptName) dir [conf|log|sync|web](web)
Return the path to an Apache directory."
}

dirCommand() { dirWebCommand; }
dirConfCommand() { echo "$confDir"; }
dirLogCommand() { echo "$logDir"; }
dirSyncCommand() { local dir="$syncDir"; ! os IsServer && dir="$UDATA/sync$syncDir"; echo "$dir"; [[ -d "$dir" ]] && return; sudoc ${G}mkdir --parents "$dir"; }
dirWebCommand() { echo "$webDir"; }

#
# profile command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\nWeb site configuration."; }
profileArgStart() { profileArgs=(); }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { AppInstallCheck && profile $noPrompt --sudo --app "apache-web" --method "$profileDir" --files "$profileFiles" "${profileArgs[@]}"; }

#
# sync command
#

syncUsage()
{
		EchoWrap "\
Usage: $(ScriptName) sync
Syncronize Apache web site files in $syncDir (the Apache Docker base directory).  

- on desktops systems, the source directory is $UDATA/sync$syncDir.\n\n$hostUsage
- files are synchrnozied to web server and load balancer servers (for NetBoot TFTP servers)"
}

syncArgStart() { unset hostArg hosts; }
syncOpt() { ScriptOptHost "$@"; }
syncCommand() { GetHostsService "apache-web" && ArrayShow  hosts; ForAllHosts sync --header "Sync Apache Files"; }

# sync HOST
sync()
{
	# do not sync to ourself
	local host="$1"; IsLocalHost "$host" && return

	# unison arguments
	local src; src="$(dirSyncCommand)" || return
	local dest="ssh://root@$host/$syncDir" 
	local args=(-ignore 'Path logs'); [[ $noPrompt ]] && args+=(-batch)
	[[ $force ]] && args+=(-force "$src")

	# syncronize
	RunLog sudor unison "${args[@]}" "$src" "$dest" && echo
}

ScriptRun "$@"
