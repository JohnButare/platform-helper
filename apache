#!/usr/bin/env bash
. script.sh || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [COMMAND]... [OPTION]...
Additional Apache web server functionality.
	
	log			show the log file
	dir			return directories
  profile web configuration"
}

init()
{
	# Ubuntu package defaults
	baseDir="$SRV/apache-web"
	confDir="/etc/apache2"
	logDir="/var/log/apache2"
	webDir="/var/www/html"
	profileDir="$webDir"
	profileFiles="*"

	# container defaults
	if [[ -d "$SRV/apache-web" ]]; then
		baseDir="$SRV/apache-web"
		confDir="$baseDir/conf"
		logDir="$baseDir/log"
		webDir="$baseDir/htdocs"
		profileDir="$baseDir"
		profileFiles="conf htdocs docker-compose.yml"
fi
}

argStart() { unset -v host; }

opt()
{
	case "$1" in
		-H|--host|-H=*|--host=*) ScriptOptGet "host" "$@";;
		*) return 1;;
	esac
}

argEnd()
{
	[[ ! $host && ! -f "/etc/apache2/apache2.conf" ]] && host="$(GetServer "web")"
	return 0
}

#
# commands
#

logCommand() { LogShow "$logDir/access.log"; } 
restartCommand() { service restart apache2; }

#
# dir command
#

dirUsage()
{
	echot "Usage: $(ScriptName) dir [conf|log|web](web)
Return the path to an Apache directory."
}

dirCommand() { dirWebCommand; }
dirConfCommand() { echo "$confDir"; }
dirLogCommand() { echo "$logDir"; }
dirWebCommand() { echo "$webDir"; }

#
# Profile Command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\nnetboot.xyz configuration."; }
profileArgStart() { profileArgs=(); }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }
profileCommand() { profile $noPrompt --sudo --app "apache-web" --method "$profileDir" --files "$profileFiles" "${profileArgs[@]}"; }

ScriptRun "$@"
