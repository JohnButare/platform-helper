@echo off
SetLocal

REM Initialize
on break cancel 1
set login=--login
gosub FindProgram

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

iff "%1" == "NoLogin" then
	set login=
	shift
endiff

set command=start
iff IsLabel %1 then
	set command=%1
	shift
endiff

REM Run the command
gosub %command
quit %_?

:usage
text 1>&2
usage: bash [NoLogin] [start|script](start)
  script [file] - execute a bash script
  start [-c "<; separated commands>"]
endtext
quit 2

:start

REM Show the shell title as bash and don't update it with the name of the running program
title bash
option //UpdateTitle=No

%program %login %$

REM Update the title with the running program again
title tc
option //UpdateTitle=Yes

return

:script

REM Arguments
if not IsFile "%1" goto usage

REM lfn gets the case of the file which is required for POSIX to find reference it
set file=%@lfn[%@full[%1]] 
shift

REM Convert the filename to UNIX format
set file=%@replace[\,/,%file]
set file=%@replace[:,,%file]
set file=%UnixDriveDir/%file

REM Run the script - use a login shell so that the base environment is set (aliases, functions, etc.)
%program %login "%file" %$
return %?

:FindProgram

REM Subsystemfor Unix
REM Cygwin	
iff IsFile "%programs32\cygwin\bin\bash.exe" then
	set program="%programs32\cygwin\bin\bash.exe" --login -i
	set UnixDriveDir=/cygdrive

elseiff "%@search[posix.exe]" != "" then
	set program="%@search[posix.exe]" /u /c /usr/local/bin/bash
	set UnixDriveDir=/dev/fs

REM win-bash
else
	set login=
	set program=win-bash.exe
	set UnixDriveDir=/
	
endiff

return
