#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" "" || exit

usage()
{
	echot "\
usage: FileInfo FILES
	Display information about the specified file
	-b, --bare				display minimal output"
	exit $1
}

args()
{
	unset -v file bare
	while (( $# != 0 )); do
		case "$1" in
			--bare|-b) bare="true";;
			--help) help="--help";;
			*)
				! IsOption "$1" && { files+=( "$1" ); shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage 0 || usage 0; }
	[[ ! $files ]] && MissingOperand "file"							# missing argument
	args=("$@")
}

FileInfo()
{
	local file="$1"
	local fileName; GetFileName "$file" fileName || return
	local ext; GetFileExtension "$file" ext || return

	[[ ! -e "$file" ]] && { EchoErr "FileInfo: cannot access \`$file\`: No such file"; return 1; }

	ShowHeader "$file"

	if [[ -h "$file" ]] && IsWindowsLink "$file"; then
		echo "$fileName: Windows $(file -b "$file")"
	else
		 file "$file" || return
	fi
	ls -l "$file" || return
	printf "permissions="; ${G}stat --format '%a' "$file"

	IsInArray "$ext" mediaExtensions && { MediaInfo || return; }

	return 0
}

init()
{
	mediaExtensions=( avi 3g2 3gp jpg kpg m2ts m4a m4p m4v mp3 mp4 mpe mpg modd moff mov mts ram rm rmvb wma wmv )
	mediaMetadata="-ImportedFileName -ImportedFileSizeBytes -ImportedFileModificationTime -ImportedOnHost -ImportedByUser -ImportedDate -ImportedFromFolder -ImportedToFolder"
}

run() 
{
	args "$@" || return
	init || return
	[[ "${#files[@]}" == "1" ]] && bare="true"
	for file in "${files[@]}"; do FileInfo "$file" || return; done
}

ShowHeader()
{
	[[ $bare ]] && return
	header "$1"
}

MediaInfo()
{
	IsPlatform win && InPath "MediaInfo.exe" && MediaInfo.exe "$file" || return
	
	[[ "$ext" != @(mp3) ]] && { MediaMetadata || return; }
}

MediaMetadata()
{
	InPath "exiftool" && { exiftool "$file" $mediaMetadata || return; }
	return 0
}

run "$@"
