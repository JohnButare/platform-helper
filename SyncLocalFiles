#!/bin/bash
. function.sh

usage()
{
	echot "\
usage: SyncLocalFiles [sync|SrcOlder|DestOlder](sync)
	Sync local files to another system.  Assume the source system is older, or assume the 
	destination system is older.
	--host								host to synchronize to
	-nb, --NoBak					do not backup files to the bak directory
"
	exit $1
}

init() 
{
	unset options method NoBak

	alwaysExclude=("*.bak" ".git" ".gitignore")
	closeProcesses=(ProcExp ShrAlias)
	intelExcludes=("pspv.exe" "regscanner*" "mailpv.exe" "awatch.exe" "netpass.exe" "SniffPass.exe" "MyLastSearch.exe" "BluetoothView.exe" "TcpTunnel.exe" "GdiView.exe" "DotNetResourcesExtract.exe")
	publicBinExclude=("${alwaysExclude[@]}" "cports.cfg" "ftp.cfg" "JkDefrag*.log" "Defraggler.ini" "gridy.ini")
	srcId="${COMPUTERNAME,,}"	

	host="nas"
	syncMethod="sync"	
}

args()
{
	while [ "$1" != "" ]; do
		case "$1" in
			--host) shift; host="${1,,}";;
			-nb|--NoBak) NoBak="$1";;
			-h|--help) usage 0;;
			sync|SrcOlder|DestOlder) method="$1";;
			*) 
				[[ "$command" == @(arg|sub) ]] && break
				echoerr "Unknown argument $1"; usage 1;
		esac
		shift
	done
	args=("$@")

	[[ "$host" == "$COMPUTERNAME" ]] && { echoerr "Cannot sync to the local computer"; exit 1; }
	{ intel IsIntelHost ||  
}

run() 
{	
	init
	args "$@"
	TimerOn
	
	TimerOff
}

run "$@"
