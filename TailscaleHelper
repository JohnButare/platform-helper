#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [cli|close|IsInstalled|IsRunning|profile|program|restart|start|startup|stop|version](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	profileName="tailscale"

	# find program and profile
	case "$PLATFORM_OS" in
		mac) program="$P/Tailscale.app" profileDir="$HOME/Library/Preferences" profileMask="io.tailscale.ipn.macsys.plist";;
		win) program="" profileDir="" profileMask="@";;
		*) unset program;;
	esac
}

cliArgs() { cliArgs=( "$@" ); shift="$#"; }
cliCommand() { AppInstallCheck && tailscale "${cliArgs[@]}" "${otherArgs[@]}"; }
closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
profileUsage() { ScriptUsageEcho "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgStart() { AppInstallCheck; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck && start "$program" "${startArgs[@]}" "${otherArgs[@]}"; }
startupCommand() { [[ ! $force ]] && isRunningCommand && return; AppInstallCheck && start "$program"; }
stopCommand() { closeCommand; } 
versionCommand() { AppInstallCheck && AppVersion "$program"; }
									 
ScriptRun "$@"
