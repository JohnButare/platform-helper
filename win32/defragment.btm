@echo off

REM PerfectDisk
REM gui=%programs32\Raxco\PerfectDisk\PerfectDisk.exe
REM cmd=%programs32\Raxco\PerfectDisk\PDCmd.exe
REM CmdOptions=/sp /wait
REM 
REM Diskeeper 
REM gui=@search[diskeeper.msc]
REM optimize=diskeeper.exe c: /b
REM 
REM AusLogics Disk Defrag
REM gui=%programs32\AusLogics Disk Defrag\diskdefrag.exe
REM 
REM Microsoft GUI Defragmenter (Vista+)
REM gui=%@search[dfrgui.exe]
REM set cmd=%@search[defrag.exe]
REM 
REM Microsoft GUI Defragmenter (pre-Vista)
REM gui=%@search[dfrg.msc]

REM Initialize
set cmd=%@BatchDir[]\df.exe
set LogFile=%@BatchDir[]\..\log\defragment.log

REM Select a MyDefrag directory if installed
set MyDefragGui=
iff exist "%programs\MyDefrag*" then

	call select.btm dir "%programs\MyDefrag*"
	if %? != 0 quit %?
	
	set MyDefragGui=%dir\MyDefrag.exe
endiff

iff %@IsInstalled[PerfectDisk] == 1 then
	set gui=call PerfectDisk start
elseiff IsFile "%MyDefragGui" then
	set gui=start /pgm "%MyDefragGui" c:\ `%options %$`
elseiff %@IsKey[] == 1 then
	set gui=start /pgm "%@BatchDrive[]\PortableApps\Diagnostic\MyDefrag\MyDefrag.exe" c:\ `%options %$`
else
	set gui=Defraggler.btm
	set cmd=df.exe
endiff

REM Arguments

set command=full
set consolidate=
set analyze=
set exclude=c:\dev\*
set options=-l "%LogFile"

if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

:GetArgs

iff IsLabel %1 then
	set command=%1
	shift & goto GetArgs
endiff

iff "%1" == "consolidate" then
	set options=%options -a 5 
	shift & goto GetArgs
endiff

iff "%1" == "exclude" then
	set %exculude=%exclude *.vmdk -e *.tib
	shift & goto GetArgs
endiff

REM Post-argument initialization
set options=%options -e %exclude

REM Run command
if not IsLabel %command goto usage
gosub %command
quit %_?

:gui
%gui
return

:cmd
"%cmd" %options %$
return

:analyze
"%cmd" %options -a 1 %$
call TextEdit "%LogFile"
return

:usage
text 1>&2
defragment [gui|SystemFiles|full|vss|cmd|analyze|log](gui) [consonidate] [exclude]
  exclude: Exclude large files
  consolidate: Consolidate free space
endtext
quit 1

:log
iff IsFile "%LogFile" then
	call TextEdit "%LogFile"
endiff
return 0

:system
:SystemFiles

if %# != 0 goto usage
if "%@OsArchitecture[]" == "x64" return

call ask `Cleanup event log?` n
if %? == 1 call event.btm clear

REM Defragment system files (x86 only)
echo - If any system files are in more than 1 fragment, defragment at next boot
echo - If fragmented, cleanup the event log
start /pgm PageDfrg
pause

REM Run defraggler if it is installed and we are not using command line arguments (which defraggler does not support)
iff %@IsInstalled[PerfectDisk] == 1 .and. %# == 0 then
	echo - For each drive, Analyze and view Statistics, Summary. 
	echo - If system files are fragmented click System Files.
	call PerfectDisk.btm start
	pause
endiff

return

:vss

iff %@IsElevated[] == 0 then
	call sudo.btm defragment.btm vss
	return %?
endiff

echos Deleting existing restore points...
call vss.btm delete >& nul:
echo done.

call defragment.btm gui
pause

call vss.btm create image

return

:full

iff %@IsElevated[] == 0 then
	call sudo.btm defragment.btm full
	return %?
endiff

set VssDeleted=
		
REM Delete system restore points to cleanup shadow copy space and prevent growth during defragmentation
iff %@IsInstalled[vss] == 1 then
	call vss.btm size
	call ask.btm `Do you want to delete all system restore points before defragmentation begins?` y
	iff %? == 1 then 
		set VssDeleted=true
		call vss.btm delete
	endiff
endiff

REM Defragment
call defragment.btm SystemFiles
call defragment.btm gui

iff defined VssDeleted then	
	pause
	call vss.btm create image
endiff

return
