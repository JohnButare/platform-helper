@echo off
SetLocal

REM Initialize
set SignatureDir=%AppData\Microsoft\Signatures

call office.btm init
if %? != 0 quit 1

set program=%OfficeDir\WinWord.exe
set title=%OfficeTitle% Word
set FastStart=%PublicData\setup\Word Fast Start.docx

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

set command=start
iff %# gt 0 then
  set command=%1
  shift
endiff

iff not IsLabel %command goto usage

REM Run command
gosub %command
quit %_?

:usage
text
usage: word [start|restart|close|kill|info|restore|cd|RestoreNormal|SaveNormal|show](start)
  hide|restore: hide or restore the FastStart document
  startup: Start Word at system startup
  signature: [cd|copy](cd)
endtext
quit 1

:start
if not IsFile "%program" return
call task start dup title "%title" "%program"
return

:startup
gosub IsInstalled & if %_? == 0 return
gosub IsRunning & if %_? == 1 return

REM - Specify a window title to ensure that the hidden Word window is not reused by the next opened word document.
REM - Command line option reference - http://support.microsoft.com/kb/q210565/
REM - Important note: If Word is minimized when hidden, subsequent opens using the Open File Dialog and other actions will restore
REM   the hidden window so that it is visible.
call task start fast %idle title "%WordFastStartTitle" "%program" /w /q "%FastStart"

return

:restart
if not IsFile "%program" return
gosub close
sleep 1
gosub startup
return

:close
if %@IsTaskRunning[%@name[%program]] == 0 return 0
process.exe -q %@FileName[%program]
return

:show
activate "%title" restore
return

:kill
call task kill winword
return

:info
call task info "%program"
return

:restore
if %# != 0 goto usage
if %@WindowExist["%WordFastStartTitle"] == 1 activate "%WordFastStartTitle" restore
return

:hide
if %@WindowExist["%WordFastStartTitle"] == 1 activate "%WordFastStartTitle" hide
return

:SaveNormal

set dir=%UserDocuments\data
set templates=%dir\templates
set replicate=%dir\replicate

copy "%templates\Normal.dotm" "%replicate\Normal Original.dotm"
copy "%templates\NormalEmail.dotm" "%replicate\NormalEmail Original.dotm"
return %_?

:cd
cde "%UserData\templates"
EndLocal /d
return 

:RestoreNormal

if not IsFile "%program" return

set IsRunning=0

REM Restore the TOC - original stored in the user template folder
iff IsFile "%UserData\templates\toc.docx" then
  echo Updating Word template...
	copy "%UserData\templates\toc.docx" "%UserProfile\templates"
endiff

REM Restore Normal templates - originals stored in the replicate folder to prevent word from unintentially updating it
set template=Normal
for ext in (dot dotm) gosub RestorNormalExtension

REM Restore Normal email templates -  originals stored in the replicate folder to prevent word from unintentially updating it
set template=NormalEmail
for ext in (dot dotm) gosub RestorNormalExtension

REM Restart word in case we needed to close it
if %IsRunning == 1 gosub startup

return

:RestorNormalExtension

set dir=%UserDocuments\data
set normal=%dir\templates\%template.%ext
set original=%dir\replicate\%template Original.%ext

if not IsFile "%original" return

iff not exist "%normal" then
  copy /q "%original" "%normal"
  quit %_?
endiff

diff "%normal" "%original" >& nul:
iff %? != 0 then 
  echos Restoring the %template template...
   
	REM Close word	 
	iff %@IsRunning[word] == 1 then
		set IsRunning=1
		call word close
		sleep 2
	endiff
	
  do forever
    
    echos Copying the original template...
    copy /q "%original" "%normal"
    echo done
    
    diff "%original" "%normal"
    iff %? == 0 then
      leave
    else
      handle %template
      echo.
      pause Manually close the above tasks then press any key to continue...
    endiff
  
  enddo

endiff

return

:IsInstalled
return %@if[IsFile "%program",1,0]

:IsRunning
call task IsRunning title "%title" "%program"
return %?

:signature

set command=cd
iff %# gt 0 then
	set command=%1
	shift
endiff

if not IsLabel Signature%command goto usage

gosub Signature%command
return %_?

:SignatureCd
iff not IsDir "%SignatureDir" return
cde "%SignatureDir"
EndLocal /d
return

:SignatureCopy

call ask.btm `Copy the current directory into the Word signature directory?` y
if %? == 0 return 0

call CopyDir.btm . "%SignatureDir"
return %?