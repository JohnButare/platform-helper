@echo off
SetLocal

REM Initialize
set title=Registry Editor
set program32=%@if[ "%@OsArchitecture[]" == "x64",%WinDir\syswow64\RegEdit.exe,%WinDir\RegEdit.exe]
set program64=%WinDir\RegEdit.exe

set reg32=%@if[ "%@OsArchitecture[]" == "x64",%WinDir\syswow64\reg.exe,%WinDir\system32\reg.exe]
set reg64=%WinDir\system32\reg.exe

REM Initialize arguments
set command=edit
set GotCommand=
set bits=64

REM Get arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

:GetArgs

iff not defined GotCommand .and. IsLabel %1 then
	set command=%1
	set GotCommand=true
	shift
	goto GetArgs
endiff

iff "%1" == "32" .or. "%1" == "64" then
	set bits=%1
	shift & goto GetArgs
endiff

iff not IsLabel %command goto usage

set program=%@EvalVar[program%bits]
set reg=%@EvalVar[reg%bits]

REM Run command
gosub %command
quit %_?

:usage
text
usage: registry [32|64] [clean|close](edit)
  edit [<key>|run|urun] - edit the specified registry key
  delete|exist|query <key> - delete or query the specified registry key
  set <key> <type> <data>
    example: registry.btm set "HKLM\SOFTWARE\Classes\classfile\shell\open\command\" REG_SZ "%@search[tcc.exe]" /c java.btm decompile "^%1" ^%*
  reg <arguments> - pass arguments to the 32 or 64 bit version of reg.exe
  import <file> - import registry entries from a file
endtext
quit 1

:clean

iff exist "%ProgramFiles\TweakNow RegCleaner Std\RegCleaner.exe" then
  start /pgm "%ProgramFiles\TweakNow RegCleaner Std\RegCleaner.exe"
else
  start /pgm RegClean
endiff

return 0

:edit

REM Arguments
set key=
iff %# != 0 then
	set key=%$
endiff

REM Aliases
switch "%key"
case "run"
	set key=HKLM\Software\Microsoft\Windows\CurrentVersion\Run
case "urun"
	set key=HKCU\Software\Microsoft\Windows\CurrentVersion\Run
endswitch
	
REM Navigate to the specified registry key
iff "%key" == "" then
	call task start "%program"
else

	iff %@IsElevated[] == 0 then
		call sudo.btm /hide registry.btm %bits edit %key
		return %?
	endiff
	
	REM Start the registry program so the correct key is opened (x64 key or x86 virtual key)
	call task start wait title "%title" "%program"
	
	RegJump.exe %key
	
endiff

return

:import

REM Initialize
set re="%@EvalVar[program%bits]"

REM Arguments
if %# != 1 goto usage
set file=%@UnQuote[%1]

iff not exist "%file" then
  echo Registry file "%file" does not exist.
	pause
  return 1
endiff

%re /s %@quote[%@full["%file"]]
return %?

:close

if %@IsTaskRunning[%program] == 0 return 0

REM regedit requires ending twice 
taskend "Registry Editor" >& nul:
taskend "Registry Editor" >& nul:

return 0

:GetRegArg

if %# lt 1 goto usage

set key=%@left[-1,%@path[%1]]
set value=%@FileName[%1]
shift 

return

:delete
gosub GetRegArg
if "%value" != "" set value=/v "%value"
%reg delete "%key" %value /f >& nul:
return %?

:query
gosub GetRegArg
%reg query "%key" /v "%value"
return %?

:reg
%reg %$
return %?

:exist
gosub GetRegArg
%reg query "%key" /v "%value" >& nul:
return %?

:set

gosub GetRegArg

if %# lt 2 goto usage

set dataType=%1
shift

REM - do not expand variables so they are passed 
setdos /x-4
set data=%$

REM - add backslash to double quotes 
set data=%@replace[^",\^",%data]

REM - trailing \ causes the ending " to be embedded, so escape it - use RegExIndex in case %data contains quote
if %@RegExIndex[\\$,%data] != -1 set data=%data\

REM Update the registry
%reg add "%key" /v "%value" /t %dataType /f /d "%data"

return %?
