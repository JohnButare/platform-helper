#!/usr/bin/env bash
. function.sh || exit

# this script will check the ping
# check we (ICS Dev AD) have access
# and grant sys_cs access
# we can give the output to jeff if there are issues

usage()
{
	echot "/
usage: ScadaPortalBootstrap [ENVIRONMENT]
	Bootstrap a SCADA Portal environment.   Must be run as a member of ICS Dev AD"
	exit $1
}

args()
{
	unset files
	while (( $# != 0 )); do
		case "$1" in
			-h|--help) IsFunction "${command}Usage" && ${command}Usage || usage 0;;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
		esac
		shift
	done
	command="${command:-development}"
	args=("$@")
}

init()
{
	return 0
}

run() {	args "$@"; init || return; ${command}Command "${args[@]}"; }

updateAdministratorsGroup()
{
	local server="$1"

	addToAdministratorsGroup "$server" "sys_cs" || return # build
	addToAdministratorsGroup "$server" "ICS Dev" || return # developer remote access
}

addToAdministratorsGroup()
{
	local server="$1" group="$2"

	echo -n "$group..."
	psexec -h '\\'$server net LocalGroup Administrators "$group" /add >& /dev/null
	return 0
}

checkUnc()
{
	local server="$1"

	echo -n "unc..."
	if ! net use '\\'$server'\c$' >& /dev/null; then
		echo "ERROR: $server UNC is not accessible as $(whoami), add \"ICS Dev AD\" to the Administrators group"
		#net use '\\'$server'\c$'
		return 1
	fi

	return 0
}

pingServer()
{
	local server="$1"

	echo -n "ping..."
	if ! ping -n 1 $server >& /dev/null; then
		echo "ERROR: $server is not available"
		return 1
	fi

	return 0
}


checkServer()
{
	local server="$1"

	echo -n "$server: "
	pingServer "$server" || return
	checkUnc "$server" || return
	updateAdministratorsGroup "$server" || return
	echo "done"
}

checkServers() { for server in $1; do checkServer $server ; done; }

pathfindingCommand() { checkServers "RasPF1FmsPrCimf RasPF1FmsBkCimf RasPF1FmsEmus RasPF1Web1 RasPF1PrSqls RasPF1BkSqls RASPF1HC"; }
developmentCommand() { checkServers "RasDevFmsPrCimf RasDevFmsBkCimf RasDevFmsEmus RasDev1Web1 RasDev1PrSqls RasDev1BkSqls RASDEV1HC"; }


run "$@"
