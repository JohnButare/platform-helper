#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|kill|IsInstalled|IsRunning|program|restart|start|startup](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start" 
	unset program

	# find program and profile
	local x410="$UADATA/Microsoft/WindowsApps/x410.exe"
	local xming="$P/Xming/Xming.exe"
	local vcxsrv="$P/VcXsrv/xlaunch.exe"

	if IsPlatform mac && FileExists "/opt/X11/bin/Xquartz" "/opt/X11/bin/quartz-wm"; then
		program="/opt/X11/bin/Xquartz" running="Xquartz"
	elif IsPlatform win; then # assume WSLg X support, "wsl supports x --quiet" is slow
		exit
	elif IsPlatform win && [[ -f "$x410" ]]; then
		program="$x410" start=("$x410") running="X410.exe"
	elif IsPlatform win && [[ -f "$xming" ]]; then
		program="$xming" start=("$xming" :0 -clipboard -multiwindow -nolisten inet6) running="Xming.exe"
	elif IsPlatform win && [[ -f "$vcxsrv" ]]; then
		program="$vcxsrv" start="start config.xlaunch"; running="vcxsrv.exe"
	fi
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$running"; } 
isInstalledCommand() { [[ -f "$program" ]]; }
isRunningCommand() { IsProcessRunning "$running"; }
killCommand() { ! IsRunningCommand && return 0; ProcessKill "$running"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startupCommand() { { IsPlatform mac || isRunningCommand; } && return 0; startCommand; } # Mac OS starts automatically
									 
#
# Start Command
#

startCommand() { AppInstallCheck && RunPlatform "start"; }
startMac() { start "/opt/X11/bin/Xquartz"; }
startWin() { start "${start[@]}"; }

ScriptRun "$@"
