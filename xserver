#!/usr/bin/env bash
. app.sh || exit

run() {	init || return; args "$@"; ${command}Command "${args[@]}"; }

init()
{
	program=; running=""; start=""

	local x410="$P/WindowsApps/ChoungNetworksUS.X410_2.8.2.0_x64__vvzc8y2tzcnsr/X410/X410.exe"
	local xming="$P/Xming/Xming.exe"
	local vcxsrv="$P/VcXsrv/xlaunch.exe"

	if IsPlatform win && [[ -f "$x410" ]]; then
		program="$x410" start=("$x410") running="X410.exe"
	elif IsPlatform win && [[ -f "$xming" ]]; then
		program="$xming" start=("$xming" :0 -clipboard -multiwindow -nolisten inet6) running="Xming.exe"
	elif IsPlatform win && [[ -f "$vcxsrv" ]]; then
		program="$vcxsrv" start="start config.xlaunch"; running="vcxsrv.exe"
	elif IsPlatform cygwin && [[ -f /usr/bin/XWin ]]; then 
		program="startxwin" start="$program" running="XWin"
	fi

	return 0;
}

usage() {	echot "usage: xserver [start|close|IsInstalled|kill|program](start)"; exit $1; }

args()
{
	while (( $# != 0 )); do
		case "$1" in
			-h|--help) usage 0;;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";;
			*)
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				[[ "$command" == @(start) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && command='start'
	args=( "$@" )
}

startCommand()
{
	IsRunningCommand && return 0
	start "${start[@]}" "$@" &
	return 0
}

startupCommand() { startCommand; }

closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$running"; } 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { ProcessList | egrep -i "$running" > /dev/null; }
killCommand() { ! IsRunningCommand && return 0; ProcessKill "$running"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }

run "$@"
