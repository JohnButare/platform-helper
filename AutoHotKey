#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|program|restart|start|startup|version](startup)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	keys="$UDATA/bin/keys.ahk"
	program="$(ProgramsElevate)/AutoHotkey/v2/AutoHotkey64.exe"
	[[ ! -f "$program" ]] && program="$(ProgramsElevate)/AutoHotkey/AutoHotkey64.exe"
	return 0
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -f "$program" ]]; }
isRunningCommand() { isInstalledCommand && IsProcessRunning "$(GetFileName "$program")"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startupCommand; }
versionCommand() { AppInstallCheck && AppVersion "$program"; }

startArgs() { startArgs=( "$@" ); shift="$#"; }

startCommand()
{
	AppInstallCheck || return

	# arguments
	set -- "${startArgs[@]}"

	# get AHK file - use $UBIN/FILE.ahk if path or ahk extension not specified
	local file="$1"; shift
	! HasFilePath "$file"  && file="$UBIN/$file"
	[[ "$(GetFileExtension "$file")" != "ahk" ]] && file+=".ahk"
	ScriptFileCheck "$file" || return

	# start the scrip
	start $wait "$program" "$file" "$@"
}

startupCommand()
{
	AppInstallCheck || return
	[[ ! -f "$keys" ]] && return
	[[ ! $force ]] && isRunningCommand && return
	start "$program" "$keys"
}

ScriptRun "$@"
