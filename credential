#!/usr/bin/env bash
. function.sh

usage()
{
	echot "\
usage: credential [-q] manager
	check										check if we can use credential management
	exists attribute [value](default)			see if a credential exists
	get attribute [value](default)				get the password 
	set attribute [value](default) password		set the password"
	exit 1
}

args()
{
	unset command attribute password quiet; value="default"

	[[ "$1" == "-q" ]] && { quiet="true"; shift; }

	# command
	{ [[ $# == 0 ]] || ! IsFunction ${1}Command; } && usage
	command="$1"; shift

	if [[ "$command" == "exists" || "$command" == "get" || "$command" == "set" ]]; then
		# attribute
		(( $# == 0 )) && usage;
		attribute="$1"; shift

		# value
		case "$command" in
			exists|get) [[ $# == 1 ]] && { value="$1"; shift; };;
			set) [[ $# == 2 ]] && { value="$1"; shift; }; ;;
		esac

		# password
		[[ "$command" == "set" && $# == 1 ]] && { password="$1"; shift; };
	fi

	[[ $# != 0 ]] && usage;
}

run() {	args "$@"; checkCommand || return; "${command}Command"; }

noCredentialManager()
{
	[[ ! "$quiet" ]] && EchoErr "A credential manager is not available"
	exit 1
}

checkCommand()
{
	local remoteServer

	_platform="$PLATFORM"
	_platformLike="$PLATFORM_LIKE"
	_platformId="$PLATFORM_ID"

	case "$_platform" in
		linux) [[ "$DISPLAY" ]] && InPath secret-tool && echo "success" | secret-tool store --label "test" test default >& /dev/null && return;;
		mac) return 0;;
		win) which wincred.exe >& /dev/null && return;;
	esac

	noCredentialManager
}

existsCommand()
{
	case "$_platform" in
		linux) secret-tool search $attribute $value |& grep label >& /dev/null;;
		mac) security find-generic-password -gwa $USER -s "$attribute-$value" >& /dev/null;;
		win) cmd.exe /c wincred.exe get "$attribute-$value" |& egrep -v "does not exist" >& /dev/null;;
	esac
}

getCommand()
{	
	local pass

	case "$_platform" in
		linux) pass="$(secret-tool lookup "$attribute" "$value")";;
		mac) pass="$(security find-generic-password -gwa $USER -s "$attribute-$value" 2> /dev/null)";;
		win) pass="$(start wincred get "$attribute-$value" 2> /dev/null)";;
	esac

	if [[ ! $pass && $DISPLAY && -f /usr/bin/ssh-askpass ]]; then
		pass="$(SUDO_ASKPASS=/usr/bin/ssh-askpass ssh-askpass "Enter the $attribute $value password" )"
	fi

	[[ ! $pass ]]	&& return 1
	echo "$pass"
}

setCommand()
{
	case "$_platform" in
		linux) echo "$password" | secret-tool store --label "credential for $attribute $value" "$attribute" "$value";;
		mac) security add-generic-password -U -a $USER -s "$attribute-$value" -w "$password";;
		win) start wincred set "$attribute-$value" "$USER" "$password" 2> /dev/null;;
	esac
}

managerCommand()
{
	if IsPlatform win; then 
		control.exe /name Microsoft.CredentialManager
	elif IsPlatform debian; then
		start seahorse
	fi
}
run "$@"

