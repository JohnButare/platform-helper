#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" script || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [DIR]... [OPTION]...
Safely delete a directory
	-a, --ask				ask before deleting 
	-c, --contents	only delete the contents of the directory, not the directory itself
	-f, --files			only delete the files in the directory
	-H, --hidden		delete hidden files or directories as well"
}

init() { defaultCommand="delete"; }
argStart() { unset -v ask contents files hidden; }

opt()
{
	case "$1" in
		--ask|-a) ask="true";;
		--contents|-c) contents="true";;
		--files|-f) files="true";;
		--hidden|-H) hidden="true";;
		*) return 1;;
	esac
}

args() { ScriptArgGet "dir" -- "$@"; }

deleteCommand()
{
	[[ ! -d "$dir" ]] && return
	dir="$(GetFullPath "$dir")" || return
	local desc; [[ $contents ]] && desc=" the contents of"
	
	if [[ $ask ]]; then
		ask "Are you sure you want to delete$desc directory '$(FileToDesc "$dir")'" -dr n || return 1
	fi

	[[ $verbose ]] && printf "Deleting${desc} directory '$(FileToDesc "$dir")'..."

	# delete directory
	[[ ! $contents ]]	&& { RunLog2 rm -fr "$dir"; [[ $verbose ]] && echo "done"; return; }

	# delete directory files and hidden
	local args=(-type f,d) rmArgs=(-fr)
	[[ $files ]] && args=(-type f) rmArgs=(-f)
	[[ ! $hidden ]] && args+=(-not -name '.*')
	[[ $test ]] && { [[ $verbose ]] && echo; ${G}find "$dir" -maxdepth 1 "${args[@]}" -not -path "$dir" | xargs echo rm "${rmArgs[@]}"; return; }
	${G}find "$dir" -maxdepth 1 "${args[@]}" -not -path "$dir" -print0 | xargs -0 rm "${rmArgs[@]}" || return
	[[ $verbose ]] && echo "done"
	return 0
}

ScriptRun "$@"
