#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|profile|program|restart|start|startup|switch](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	ddm="/mnt/c/Program Files (x86)/Dell/Dell Display Manager/ddm.exe"
	ddmHost="oversoul"
	ddmHostInput="DP"
	ddmAlternateInput="Thunderbolt (90W)"
 	profileName="DellDisplayManager" profileKey="HKEY_CURRENT_USER/Software/EnTech/DDM"
	program="$ddm" 
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -f "$program" ]]; }
isRunningCommand() { IsProcessRunning "$(GetFileName "$program")"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { ! IsPlatform win && return; profile $noPrompt --app "$profileName" --method "$profileKey" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand "$@"; }
switchCommand() {	ddm /SetActiveInput "$(onDdmHost && echo "$ddmAlternateInput" || echo "$ddmHostInput")"; }

#
# helper
#

onDdmHost() { [[ "$HOSTNAME" == "$ddmHost" ]]; }

# runDdm [COMMAND]... - run a DDM command on the ddmHost
ddm()
{
	if [[ -f "$ddm" ]]; then
		RunLog "$ddm" "$@"
	elif IsAvailable "$ddmHost"; then
		local cmd="'$ddm' $@"
		RunLog ssh "$ddmHost" "$cmd"
	else
		ScriptErr "$ddmHost is not available"
		return 1
	fi
}

ScriptRun "$@"
