#!/usr/bin/env bash
#-x (debug) -v (verbose)
. function.sh || exit

usage()
{
	echot "\
usage: unc [explore|mount|unmount|IsMounted](explore) UNC
	explorer 	mount UNC and open in file explorer
	IsMounted	if UNC is mounted returns DIR mounted to
	list			list UNC disks on the host
	mount 		mount UNC and return DIR mounted

	-q, --quiet							hide status messages"
	exit $1
}

args()
{
	unset -v unc quiet

	while (( $# != 0 )); do
		case "$1" in
			-h|--help) help="--help";;
			-q|--quiet) quiet="--quiet";;

			UnMount) command="UnMount";; IsMounted) command="IsMounted";;
				*)
				IsUncPath "$1" && [[ ! $unc ]] && { unc="$1"; shift; continue; }
				[[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done
	[[ $help ]] && { IsFunction "${command}Usage" && ${command}Usage 0 || usage 0; }
	[[ ! $command ]] && { command="explore"; }
	[[ "$comamnd" == @(UnMount|mount) && ! $unc ]] && MissingOperand "unc"
	args=("$@")
}

init() { :; }
run() {	args "$@" || return; init || return; ${command}Command "${args[@]}"; }

listCommand()
{
	local server="$(GetUncServer "$unc")"

	# win
	[[ "$PLATFORM" == "win" ]] && { ls "$server"; return; }

	# mac
	smbutil view "//$server" | grep "Disk"
}

mountCommand()
{ 
	[[ ! "$(GetUncShare "$unc")" ]] && { EchoErr "unc mount: no share specified"; return 1; }

	# Windows can use UNC paths natively
	[[ "$PLATFORM" == "win" ]] && { echo "$unc"; return 0; }

	# Mount the share
	local noHostCheck; [[ "$1" == "--no-host-check" ]] && { noHostCheck="true"; shift; }
	local dir; dir="$(IsMountedCommand)" && { echo "$dir"; return 0; }
	local server share shareId dirs user; GetUncInfo "$unc"
	local mountDir=~/"Volumes/${server}_${shareId}" result

	if [[ ! $noHostCheck ]] && ! HostUtil available "$server"; then
		[[ ! "$quiet" ]] && EchoErr "Host $server is not available"
		return 1
	fi

	# remove an existing share in the mountDir
	if [[ -d "$mountDir" ]]; then
		umount "$mountDir" >& /dev/null
		rmdir "$mountDir" >& /dev/null
	fi

	if ! mkdir --parents "$mountDir"; then
		EchoErr "Could not create the mount directory $mountDir"
		return 1
	fi

	if [[ "$PLATFORM" == "mac" ]]; then
		mount_smbfs "smb://$user:$(security find-generic-password  -gwa $user)@$server/$share" "$mountDir"

	elif [[ "$PLATFORM" == "linux" ]]; then # Ubuntu

		# add an entry to /etc/fstab so sudo is not required to write to the share		
		if ! egrep -i "//$server/$shareId\\\$* $mountDir cifs username=$user,noauto,rw,users 0 0" /etc/fstab >& /dev/null; then
			local line="//$server/$share $mountDir cifs username=$user,noauto,rw,users 0 0"
			sudo bash -c "echo \"$line\" >> /etc/fstab" || return
		fi

		local password="$(credential -q get drive default)"

		[[ $password ]] && export PASSWD="$password"
		mount.cifs "//$server/$share" "$mountDir" -o user=$user sec=ntlmsspi
		[[ $password ]] && unset PASSWD
	fi

	if ! IsMountedCommand; then
		rmdir "$mountDir" > /dev/null;
		return 1
	fi
	return 0
}

UnMountCommand()
{ 
	[[ "$PLATFORM" == "win" ]] && { echo "$unc"; return 0; }

	local dir; dir="$(IsMountedCommand)" || return 0

	if [[ "$PLATFORM" == "mac" ]]; then
		GetFileName "$dir" dir; osascript -e "tell application \"Finder\"" -e "eject \"$dir\"" -e "end tell"

	elif [[ "$PLATFORM" == "linux" ]]; then
		umount "$dir"
		rmdir "$dir" || return
	fi	
}

GetUncInfo()
{
	GetUncServer "$unc" server
	GetUncShare "$unc" share; shareId="${share%%\$}"
	GetUncDirs "$unc" dirs
	user=$USER
}

IsMountedCommand()
{
	[[ "$PLATFORM" == "win" ]] && return "$unc"

	local server share shareId dirs; GetUncInfo "$unc"
	local prefix=""; [[ "$PLATFORM" == "mac" ]] && prefix="$user@"
	local node="$(mount | egrep "^//$prefix${server%%.*}.*/$shareId\\\$* on " | head -n 1 | cut -d" " -f 3)"

	[[ ! $node ]] && return 1
	[[ $dirs ]] && echo "$node/$dirs" || echo "$node"
}

exploreCommand()
{
	local dir=$(mountCommand) || return
	explore "$dir" || return
}

run "$@"
