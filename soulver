#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|program|restart|start|startup|version](start)
$(ScriptName) commands."
}

# /Users/jjbutare/Applications/Soulver 3.app/Contents/MacOS/CLI/soulver
init()
{ 
	defaultCommand="cli" program="$PUSER/Soulver 3.app"
	cli="$PUSER/Soulver 3.app/Contents/MacOS/CLI/soulver"
}

cliArgs() { cliArgs="$@"; shift="$#"; }
cliCommand() { "$cli" "${cliArgs[@]}" "${otherArgs[@]}"; }
closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck && start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }
versionCommand() { AppInstallCheck && AppVersion "$program" | cut -d"." -f1-3; }

ScriptRun "$@"
