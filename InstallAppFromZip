#!/usr/bin/env bash
. function.sh

runLinux() { tar xjvf "$1" -C "$P"; }

runMac()
{
	local dir="$(zipinfo -1 "$p" | head -1)"
	if [[ "$dir" =~ ^.*app/$ ]]; then
		[[ -d "$P/$dir" ]] && return 0
		unzip "$p" -d "$P"
		return
	fi

	getDest "$@" && shift || return
	runCommon
}

runWin()
{
	getDest "$@" && shift || return
	
	if [[ "$elevate" ]] && ! IsElevated; then
		echo "InstallAppFromZip \"$p\" \"$dest\" "$@"" > "$TMP/InstallAppFromZip.sh"
		elevate run --pause-error source "$TMP/InstallAppFromZip.sh"
		return
	fi

	runCommon
}

getDest()
{
	dest="$1"; shift
	[[ ! $dest ]] && { EchoErr "app: installation directory was not specified"; return 1; }
	return 0
}

runCommon()
{
	if [[ -d "$dest" ]]; then
		ask "Do you want to delete the existing installation in \"$(GetFileNameWithoutExtension "$dest")\"" -dr n || return
		${G}rm -fr "$dest" || return
	fi

	${G}mkdir --parents "$dest" || return
	unzip -d "$dest" "$p" || return

	# If the archive contains a single directory move the contents of that directory up
	if [[ "$(DirCount "$dest")" == 1 ]]; then
		for dir in "$dest"/*; do
			if [[ -d "$dir" ]]; then
				MoveAll "$dir" "$dest" || return
				break
			fi
		done
	fi

	return 0
}

run()
{
	local elevate; [[ "$1" == "--elevate" ]] && { elevate="true"; shift; }
	local p="$1"; shift
	local dest
	
	[[ ! $p ]] && { EchoErr "app: installation source was not specified"; return 1; }
	RunPlatform run "$@"
}

run "$@"
