#!/usr/bin/env bash
. function.sh
. color.sh || return

runLinux() { sudo tar xjvf "$p" -C "$P"; }

runMac()
{
	local dir="$(zipinfo -1 "$p" | head -1)"
	if [[ "$dir" =~ ^.*app/$ ]]; then
		checkExists "$P/$dir" || return
		unzip "$p" -d "$P"
		return
	fi

	getDest "$@" && shift || return
	checkExists "$dest" || return
	runCommon
}

runWin()
{
	getDest "$@" && shift || return
	checkExists "$dest" || return
	
	if [[ "$elevate" ]] && ! IsElevated; then
		echo "${RB_GREEN}inflating...${RESET}"
		RunScriptElevated "InstallAppFromZip --no-prompt \"$p\" \"$dest\" "$@"" || return
		echo "${RB_GREEN}done${RESET}"
	else
		runCommon
	fi
}

getDest()
{
	dest="$1"; shift
	[[ ! $dest ]] && { EchoErr "app: installation directory was not specified"; return 1; }
	return 0
}

checkExists()
{
	local dir="$1"

	[[ ! -d "$dir" ]] && return
		
	[[ ! $noPrompt ]] && { ask "Do you want to delete the existing installation in \"$dir\"" -dr n || return; }

	if IsPlatform win && ! IsElevated; then
		printf "${RB_GREEN}cleaning...${RESET}"
		RunScriptElevated rm -fr "\"$dir\"" || return
		echo "${RB_GREEN}done${RESET}"
	else
		${G}rm -fr "$dir"
	fi
}

runCommon()
{
	${G}mkdir --parents "$dest" || return
	unzip -d "$dest" "$p" || return

	# If the archive contains a single directory move the contents of that directory up
	if [[ "$(DirCount "$dest")" == 1 ]]; then
		for dir in "$dest"/*; do
			if [[ -d "$dir" ]]; then
				MoveAll "$dir" "$dest" || return
				break
			fi
		done
	fi

	return 0
}

run()
{
	local elevate; [[ "$1" == "--elevate" ]] && { elevate="true"; shift; }
	local noPrompt; [[ "$1" == "--no-prompt" ]] && { noPrompt="true"; shift; }
	local p="$1"; shift
	local dest

	[[ ! $p ]] && { EchoErr "app: installation source was not specified"; return 1; }
	RunPlatform run "$@"
}

run "$@"
