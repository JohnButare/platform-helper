#!/usr/bin/env bash
. function.sh
. color.sh || return

run() {	init && args "$@" && install; }

init() { :; }

usage()
{
	echot "\
usage: InstallAppFromZip ZIP [DESTINATION]($P) -- ZIP_OPTIONS
	Install an application from a ZIP file.

	-e, --elevate				in Windows install the application with an elevated (Administrator) token
	-np, --no-prompt		do not prompt for input
	-v, --verbose				display detailed output"
	exit $1
}

args()
{
	unset -v dest elevate noPrompt verbose zip
	
	while (( $# != 0 )); do
		case "$1" in "") : ;;
			-e|--elevate) elevate="--elevate";;
			-h|--help) usage 0;;
			-np|--no-prompt) noPrompt="--no-prompt";;
			-v|--verbose) verbose="--verbose";;
			*)
				! IsOption "$1" && [[ ! $zip ]] && { zip="$1"; shift; continue; }
				! IsOption "$1" && [[ ! $dest ]] && { dest="$1"; shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done

	[[ ! $zip ]] && MissingOperand "zip"
	dest="${dest:-$P}"
}

#
# install
#

install() { RunPlatform install; }

installLinux() { runCommon; }

installMac()
{
	local dir="$(zipinfo -1 "$zip" | head -1)"
	if [[ "$dir" =~ ^.*app/$ ]]; then
		checkExists "$dest/$dir" || return
		unzip "$zip" -d "$P" || return
		return
	fi

	checkExists "$dest" || return
	runCommon
}

installWin()
{
	checkExists "$dest" || return
	
	if [[ "$elevate" ]] && ! IsElevated; then
		RunScript --elevate $verbose -- InstallAppFromZip $verbose --no-prompt "$zip" "$dest" || return
	else
		runCommon
	fi
}

#
# helper
#

checkExists()
{
	local dir="$1"

	[[ ! -d "$dir" ]] && return
		
	[[ ! $noPrompt ]] && { ask "Do you want to delete the existing installation in \"$dir\"" -dr n || return; }

	if IsPlatform win && ! IsElevated; then
		printf "cleaning..."
		RunScript --elevate -- rm -fr "\"$dir\"" || return
		echo "done"
	else
		${G}rm -fr "$dir"
	fi
}

runCommon()
{
	${G}mkdir --parents "$dest" || return

	[[ $verbose ]] && hilight "Unzipping \"$(GetFileName "$zip")\" to \"$dest\"..." || hilight "Inflating..."

	# unzip the archive
	if IsPlatform linux; then
		sudo tar --extract --verbose --auto-compress --file="$zip" -C "$dest"
	else
		UnzipPlatform "$zip" "$dest" || return
	fi

	return 0
}

run "$@"
