#!/usr/bin/env bash
. function.sh
# bootstrap-remote [REMOTE|DIR](pi@pi1) - bootstrap a remote system

init()
{
	. "${BASH_SOURCE[0]%/*}/bootstrap-config.sh" || return
	remote="${1:-pi@pi1}"
}

run()
{
	init "$@" || return
	if ChrootHelper installed && ChrootHelper exists "$1"; then
		bootstrapChroot
	else
		bootstrapSsh
	fi
}

copyFiles() { scp "$BIN/bootstrap-init" "$BIN/bootstrap-config.sh" "$1"; }

bootstrapSsh()
{
	IsLocalAddress "$remote" && { remote=$(MdnsResolve "$remote") || return; }
	configureSsh || return
	copyFiles "$remote:/tmp" || return
	ssh -t $remote bash -l "/tmp/bootstrap-init" || return
}

configureSsh()
{
	ssh $remote ls '~/.ssh >& /dev/null' && return
	ssh $remote '[[ -d ~/.ssh ]] || mkdir ~/.ssh' || return
	scp ~/.ssh/* ''$remote':~/.ssh' || return
}

bootstrapChroot()
{
	local dist="$remote" dir="$(ChrootHelper dir "$remote")"

	[[ ! -d "$dir" ]] && { EchoErr "$dist root directory "$dir" does not exist"; return 1; }
	copyFiles "/tmp" || return; copyFiles "$dir/tmp" || return # some distributions mount our tmp
	ChrootHelper run "$dist" -s /bin/bash -d /tmp "/tmp/bootstrap-init" # -u $USER
}

run "$@"
