#!/bin/bash
. app.sh || exit

usage() {	echot "usage: notepadpp [start|close|restart|cd](start)
  profile dir|SaveDir|backup|restore [<profile name>|default](latest)
  	-d, --duplicate			open a new instance"; exit $1; }

args()
{
	unset -v command duplicate help
	while (( $# != 0 )); do
		case "$1" in
			-d|--duplicate) duplicate="-multiInst";;
			--help) help="--help";;
			IsRunning) command="IsRunning";; IsInstalled) command="IsInstalled";; # case-insensitive aliases
			*)
				! IsOption "$1" && [[ ! $command ]] && { CheckCommand "$1"; shift; continue; }
				[[ "${command}" == @(start|startup|profile|service) ]] && break
				UnknownOption "$1"
		esac
		shift
	done
	[[ ! $command ]] && { command="start"; }
	[[ $help ]] && IsFunction "${command}Usage" && { ${command}Usage || usage 0; }
	args=( "$@" )
}

init()
{ 
	title=".*Notepad++"
	program="$P32/Notepad++/notepad++.exe"
}

run() {	args "$@" || return; init || return; ${command}Command "${args[@]}"; }
cdCommand() { echo "$cd"; }
closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } # task close|CloseKill [--wait] [--title "$title"] "$program"; ProcessKill "$program"; SendKeys "$title" "!FX"; 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";
restartCommand() { closeCommand && startCommand; }

profileCommand()
{
	local profileFiles

	# Configuration files
	profileFiles="config.xml contextMenu.xml shortcuts.xml stylers.xml userDefineLang.xml"

	# Plugin configuration files
	profileFiles+="*.ini plugins\config\*.ini"

	profile --app "NotepadPP" --method "$APPDATA/Notepad++" --files "$profileFiles" "$@"
}

startCommand()
{
	! IsInstalledCommand && return 1; { [[ ! $duplicate ]] && IsRunningCommand; } && return 0
	start "$program" $duplicate "$@"
}

run "$@"