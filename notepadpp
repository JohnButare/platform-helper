#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|profile|program|restart|start|startup](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	title=".*Notepad++"
	profileName="NotepadPP" profileDir="$UADATA/../Roaming/Notepad++" profileMask="config.xml contextMenu.xml shortcuts.xml stylers.xml userDefineLang.xml *.ini plugins\config\*.ini"
	program="$P/Notepad++/notepad++.exe"
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -f "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }
profileCommand() { profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startupCommand() { startCommand; }
versionCommand() { AppInstallCheck && AppVersion "$program"; }

#
# Start Command
#

startUsage()
{
	echot "Usage: $(ScriptName) start [FILES]
Start Notepad++.

	-d, --duplicate			open a new instance"
}

startOpt()
{
	unset -v duplicate
	case "$1" in
		-d|--duplicate) duplicate="-multiInst";;
		*) return 1;;
	esac
}

startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck && start $wait $duplicate "$program" "${startArgs[@]}"; }
		
ScriptRun "$@"
