#!/usr/bin/env bash
. function.sh

run() {	init; args "$@"; ${command}Command "${args[@]}"; }

init() { :; }

usage()
{
	echot "\
usage: HostCleanup [gui]
	Cleanup extraneous files and configuration on the host
		-np, --no-prompt		do not prompt for what to cleanup"
	exit $1
}

args()
{
	unset command

	while [ "$1" != "" ]; do
		case "$1" in
			-h|--help) IsFunction "${command}Usage" && ${command}Usage 0 || usage 0;;		
			-np|--no-prompt) function ask { :; };;		
			*) 
				[[ ! $command ]] && IsFunction "${1,,}Command" && { command="${1,,}"; shift; continue; }
				UnknownOption "$1"
		esac
		shift
	done

	command="${command:-cleanup}"
}

guiCommand()
{
	IsPlatform mac && { start "CleanMyMac X.app"; return; }
	IsPlatform win && { start "$P/CleanMyPC/CleanMyPC.exe"; return; }
	return 0
}

cleanupCommand()
{
	cleanupFiles || return
	cleanupPrograms || return
	RunPlatform cleanup || return
}

cleanupFiles()
{
	echo -n "cleaning files..."

	! IsPlatform mac && [[ -d "$TMP" ]] && { rm -fr "$TMP/"*; echo -n "."; }

	[[ -d "$HOME/Volumes" ]] && { rmdir "$HOME/Volumes/"* >& /dev/null; echo -n "."; }

	if IsPlatform win; then
		[[ -d "$LOCALAPPDATA/temp" ]] && { rm -fr "$LOCALAPPDATA/temp/"* >& /dev/null; echo -n "."; }
		[[ -d "$WIN_ROOT/temp" ]] && { rm -fr "$WIN_ROOT/temp/"* >& /dev/null; echo -n "."; }
		[[ -d "$WINDIR/Temp" ]] && { rm -fr "$WINDIR/Temp/"* >& /dev/null; echo -n "."; }
	fi

	echo "done"

	return 0
}

cleanupPrograms()
{
	which gem >& /dev/null && ask "Cleanup gem" && { gem cleanup || return; }
	which brew >& /dev/null && ask "Cleanup brew" && { brew cleanup || return; }
	return 0
}

cleanupDebian()
{
	sudoc apt-get clean -y || return 	# cleanup downloaded package files in /var/cache/apt/archives
	sudoc apt autoremove -y || return
	InPath wajig && { wajig purgeremoved || return; }
	return 0
}

cleanupWin()
{
	ask 'Cleanup old windows versions' && { elevate CleanMgr.exe /AUTOCLEAN || return; }
	ask 'Cleanup path' && { start --elevate os path editor || return; }
	ask 'Cleanup startup programs' && { start --elevate autoruns || return; }
	ask 'Cleanup scheduled tasks' && { start --elevate task scheduler || return; }
	ask 'Cleanup remaining files' && { elevate CleanMgr.exe /VERYLOWDISK || return; }
	return 0
}

run "$@"