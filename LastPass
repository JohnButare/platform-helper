#!/usr/bin/env bash
. app.sh || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [COMMAND]...
LastPass management

	[close|start|startup|close|restart](start)
	login|logout		login or logout of the LastPass CLI"
}

init() { program="$P32/LastPass/lastapp_x64.exe"; }

#
# commands
#

closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } # task close|CloseKill [--wait] [--title "$title"] "$program"; ProcessKill "$program"; SendKeys "$title" "!FX"; 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";
restartCommand() { closeCommand && startCommand; }
startupCommand() { startCommand; }
startCommand() { ! IsInstalledCommand && return 1; IsRunningCommand && return 0; start "$program" "$@"; }

loginCommand()
{	
	checkCli || return
	loggedIn && return

	local username="johns@butare.net"; [[ -f "$HOME/.lpass/username" ]] && username="$(cat "$HOME/.lpass/username")"

	if credential exists LastPass master --fallback; then
		export LPASS_DISABLE_PINENTRY=1; credential get LastPass master --fallback | lpass login "$username" --trust
	else
		lpass login "$username" --trust
	fi
}

logoutCommand() { ! loggedIn && return; lpass logout --force; }

#
# helper
#

checkCli() { InPath lpass && return; package lastpass-cli; }
loggedIn() { lpass status -q; }

ScriptRun "$@"