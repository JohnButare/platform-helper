#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [close|IsInstalled|IsRunning|program|restart|start|startup](start)
$(ScriptName) commands.

	login|logout		login or logout of the LastPass CLI"
}

init() { program="$P32/LastPass/lastapp_x64.exe"; }
closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -e "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); shift="$#"; }
startCommand() { AppInstallCheck || return; start $wait "$program" "${startArgs[@]}"; }
startupCommand() { startCommand; }

loginCommand()
{	
	checkCli || return
	loggedIn && return

	local username="johns@butare.net"; [[ -f "$HOME/.lpass/username" ]] && username="$(cat "$HOME/.lpass/username")"

	if credential exists LastPass master --fallback; then
		export LPASS_DISABLE_PINENTRY=1; credential get LastPass master --fallback | lpass login "$username" --trust
	else
		lpass login "$username" --trust
	fi
}

logoutCommand() { ! loggedIn && return; lpass logout --force; }

checkCli() { InPath lpass && return; package lastpass-cli; }
loggedIn() { lpass status -q; }

ScriptRun "$@"