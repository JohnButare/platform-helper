#!/usr/bin/env bash
. app.sh || exit

run() {	init && args "$@" && "${command}Command" "${args[@]}"; }

init() { program="$P32/LastPass/lastapp_x64.exe"; }

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [COMMAND]...
LastPass management

	[start|startup|close|restart](start)"
}

args()
{
	unset -v brief

	# commands
	ScriptCommand "$@" || return

	# options
	set -- "${args[@]}"; args=()
	while (( $# != 0 )); do
		case "$1" in "") : ;;
			-b|--brief) brief="true";;
			-h|--help) usage 0;;
			--) shift; otherArgs+=("$@"); set --; break;;
			*) ScriptOpt "$@";;
		esac
		shift "$shift"; shift=1
	done
	set -- "${args[@]}"
	
	# arguments
	ScriptArgs "$@" || return; shift "$shift"
	[[ $@ && "$command" != @(start|startup|profile) ]] && usage
	[[ $@ ]] && usage
	args=("$@")
	return 0
}

closeCommand() { ! IsRunningCommand && return 0; ProcessClose "$program"; } # task close|CloseKill [--wait] [--title "$title"] "$program"; ProcessKill "$program"; SendKeys "$title" "!FX"; 
IsInstalledCommand() { [[ -f "$program" ]]; }
IsRunningCommand() { IsTaskRunning "$program"; } # task IsRunning --title "$title" "$program"; WinExists "$title";
restartCommand() { closeCommand && startCommand; }
startupCommand() { startCommand; }
startCommand() { ! IsInstalledCommand && return 1; IsRunningCommand && return 0; start "$program" "$@"; }

loginCommand()
{	
	checkCli || return
	loggedIn && return

	local username="johns@butare.net"; [[ -f "$HOME/.lpass/username" ]] && username="$(cat "$HOME/.lpass/username")"

	if credential exists LastPass master --fallback; then
		export LPASS_DISABLE_PINENTRY=1; credential get LastPass master --fallback | lpass login "$username" --trust
	else
		lpass login "$username" --trust
	fi
}

logoutCommand() { ! loggedIn && return; lpass logout --force; }

#
# helper
#

checkCli() { InPath lpass && return; package lastpass-cli; }
loggedIn() { lpass status -q; }

run "$@"