@echo off
SetLocal

REM Initialize
set program=%programs32\iTunes\iTunes.exe
set title=iTunes

REM Initialize profile
set ProfileApp=iTunes
set ProfileMethod=%UserHome\Music\iTunes
set ProfileDir=%UserHome\My Documents\Music\iTunes
set ProfileFiles=*library*

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

iff "%1" == "remote" then
	psexec -i \\%2 tcc /c RunScript iTunes.js %3
	quit 0
endiff

set command=start
iff %# gt 0 then
  set command=%1
  shift
endiff

if not IsLabel %command goto usage

REM Run command
gosub %command
quit %_?

:verify
if not exist "%program" quit 0
return

REM Start iTunes as an alarm (play with increasing volume)
:alarm
gosub verify
RunScript iTunes.js alarm
return

REM Play
:play
:pause
:next
:previous
gosub verify
iff %@IsTaskRunning[iTunes] == 1 then
  runScript iTunes.js %command
endiff
return

:start
gosub verify
if %@IsTaskRunning[iTunes] == 0 call task start iTunes.exe
return

:startup
gosub verify
if %@IsTaskRunning[iTunes] == 0 call task start %idle wait title %title "%program"
set command=play & gosub play
return

:restart

gosub verify

iff %@IsTaskRunning[iTunes] == 1 then
	gosub close
	sleep 1
endiff

call task start wait "%program"

return

:close

gosub verify

iff %@IsTaskRunning[iTunes] == 1 then

	REM Active will work if the iTunes does not hide its window when minimized, so try that first
	activate "iTunes" close >& nul:
  if %? != 0 RunScript iTunes.js close
	
  call task close wait iTunes
	
endiff

return

:ComHelp
start /pgm "%@BatchDir[]\iTunesCOM.chm"
return

:usage
text
usage: iTunes: [BackupDir|ComHelp|start|restart|close|alarm|startup|prefs](start)
  cleanup|sync|ListDeadTracks|DeleteDeadTracks
  profile dir|SaveDir|backup|restore [profile](latest)
  play|pause|next|previous|stop - control iTunes
endtext
quit 1

:BackupDir
cde "%AppData\Apple Computer\MobileSync\Backup"
echo Note: mdinfo files containt the name of the application in the corresponding mddata backup file
EndLocal /d
return

:profile

iff "%1" == "restore" then
	gosub ProfileRestore
else
	call profile.btm %$
	if %? == 1 goto usage
endiff
	
return %?

:ProfileRestore

call ask `Do you want to move library files?` n
iff %? == 0 then
	call profile.btm %$
	return %?
endiff

REM Set the new location of the libary files
text
- If the library location is on a network share, add the location as a network place, 
  i.e. \\oversoul\public\music
- iTunes, Edit, Preferences, Advanced, Change, i.e. \\oversoul\public\music
endtext 
call iTunes start
pause

REM Restore the library without restarting iTunes
set ProfileAppStart=
call profile.btm %$

REM Edit the library
echo - Replace folders from the original location to the new
echo   i.e. file://localhost/C:/Users to file://oversoul
call TextEdit "%ProfileDir\iTunes Music Library.xml"
pause

REM Blank the ITL library file to force the XML library file to be imported when iTunes is started
echos > "%ProfileDir\iTunes Library.itl"

REM Import the new library and manual updates
echo - Drag all items from PLAYLISTS\Podcasts to LIBRARY\Podcasts and click SUBSCRIBE on each Podcast 
call iTunes start
pause

return

:IsInstalled
return %@if[IsFile "%program",1,0]

:sync
REM MediaCmd required TagLib - http://download.banshee.fm/taglib-sharp/
MediaCmd SyncRatings
return

:DeleteDeadTracks
RunScript iTunes.js DeleteDeadTracks
return

:ListDeadTracks
RunScript iTunes.js ListDeadTracks
return

:cleanup

if %@IsInstalled[iTunes] == 0 return 1

set IsRunning=%@IsRunning[iTunes]

REM Start iTunes so it is running elevated if we are, otherwise iTunes COM calls fail
if %IsRunning == 1 .and. %@IsElevated[] == 1 call iTunes.btm restart

call ask `Sync ratings with Windows Media Player?` y
if %? == 1 call TakeCommand StartTransient "call iTunes.btm sync & pause"
	
call ask `List iTunes dead tracks?` y
if %? == 1 call iTunes.btm ListDeadTracks

call ask `Delete iTunes dead tracks?` n
if %? == 1 call iTunes.btm DeleteDeadTracks

iff %IsRunning == 0 then
	iff %@IsRunning[iTunes] == 1 then
		pause Press any key to close iTunes...
		call iTunes.btm close
	endiff
endiff

return

:IsRunning
call task IsRunning title "%title" "%program"
return %?

:prefs
text
- disable backup: after first<dict>
<key>DeviceBackupsDisabled</key>
<data>
dHJ1ZQ==
</data>
endtext

call TextEdit.btm "%LocalAppData\Apple Computer\iTunes\iTunesPrefs.xml"

return 0