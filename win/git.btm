@echo off
SetLocal

set git=git.exe
set gui=
set repository=git@butare.net:/volume1/git

REM Arguments
:GetArgs
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

set command=usage
iff %# gt 0 .and. IsLabel %1 then
	set command=%1
	shift
endiff
if not IsLabel %command goto usage

REM Run command
gosub %command
set result=%_?

EndLocal result,TfsPassword

quit %result

:usage
text 
usage: svn|gui|code
  code [clone:update|switch|status|commit|log] <project>
endtext
quit 1

:svn

iff not IsFile "%svn" then
	EchoErr Could not find svn command.
	return 1
endiff

"%svn" %$
return %?

:proc
:gui

iff not IsFile "%gui" then
	EchoErr Could not find TortoiseSVN GUI command.
	return 1
endiff

"%gui" %$
return %?

:IsInstalled
return %@if[IsFile "%svn",1,0]

:code

iff not IsLabel Code%1 then
  goto usage
endiff

set command=%1
shift

if %# lt 1 goto usage

iff "%command" == "log" then
	set file=%1
else
	set project=%1
	set ProjectDir=%LocalCode\%project
endiff
shift

gosub Code%command
return %?

:CodeLog
call TortoiseSVN gui /command:log  /path:"%file"
return %$

:CodeStatus
call TortoiseSVN svn status "%ProjectDir"
return %$

:CodeRevert
call TortoiseSVN gui /command:revert /path:"%ProjectDir"
return %$

:CodeCommit

iff "%@ExecStr[TortoiseSVN code status %project]" == "" then
  echo There are no changes in %project project
  return 0
endiff
 
call TortoiseSVN gui /command:commit /path:"%ProjectDir"
return %$

:CodeUpdate

echo Updating %project...
call TortoiseSVN svn co "https://%SvnRepository/svn/%project/trunk/" "%ProjectDir"
set result=%?
echo.
return %result

SvnSwitch `echo Switching %1 to %@if[ %# == 1,trunk,%2]... & svn switch %@if[ %# == 1 ,"^/trunk","^/branches/%2"] "c:\Projects\%1"

:CodeSwitch
set trunk=
if %# == 0 .or. "%1" == "trunk" set trunk=true
echo Switching %project to %@if[ defined trunk ,trunk,branch %1]... 
call TortoiseSVN svn switch %@if[ defined trunk ,"^/trunk","^/branches/%1"] "%ProjectDir"
return %?

:clone
%git clone git@butare.net:/volume1/git/test c:/code/test
return