@echo off

REM Initialize
set VssDir=%programs32\Microsoft Visual SourceSafe
set VssKey=HKCU\Software\Microsoft\Sourcesafe
set VssCurrentDatabaseKey=%VssKey\Current Database
set CodeDir=c:\code

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

set command=gui
iff %# gt 0 then
  set command=%1
  shift
endiff

iff not IsLabel %command goto usage

REM Run command
gosub %command
quit %_?

:usage
text 
USAGE: VisualSourceSafe [add|AddDefault|admin|analyze|delete|fix|gui|info|list|ListFor|select|setup](gui)
  add <name> <path>: Add a SourceSafe database registration
  AddDefault: Add default SourceSafe database registrations
  admin: Run SourceSafe administrator
  delete [<name>]: Delete a SourceSafe database registration
  fix [<name>]: Fix the database
  analyze [<name>] [<options>](-v4): Analyze the database
  gui: Start SourceSafe Explore
  list: list defined source safe databases 
  ListFor: list defined source safe databases in a format suitable for a "for" statement
  select [<name>]: select the specified VSS database
  setup: Setup SourceSafe by adding default databases and updating the path
endtext
quit 1

:AddDefault
set DatabaseName=Wiggin & set DatabasePath=\\oversoul\vss & gosub AddHelper
set DatabaseName=Develop & set DatabasePath=\\azsedevstg1\files\data\Archive & gosub AddHelper
set DatabaseName=ES Web & set DatabasePath=\\fmseswebdvb\vss & gosub AddHelper
set DatabaseName=HR KTBR & set DatabasePath=\\smg-vss1.ed.cps.intel.com\hrktbr & gosub AddHelper
call VisualSourceSafe select
return

:admin
start /pgm "%VssDir\SsAdmin"
return

:ListFor
reg query %VssKey\Databases | egrep -i REG_SZ | gawk '{ FS = "\t" } { sub(" *","",$1) } { printf "\"" $1 "\" " }'
return

:list
reg query %VssKey\Databases | egrep -i REG_SZ | gawk '{ FS = "\t" } { sub(" *","",$1) } { printf $1 "\n" }'
return

:info
echo CurrentDatabase=%@RegGet[%VssCurrentDatabaseKey]
echo SsDir=%SsDir
echos Databases=
gosub ListFor
return

:select

REM Arguments
iff %# == 0 then
  gosub SelectDatabase
elseiff %# == 1 then
  gosub GetDatabase
else
  goto usage
endiff

REM Update the current database inthe registry for SourceSafe explorer
call registry.btm 32 set "%VssCurrentDatabaseKey" REG_SZ %DatabasePath > nul:

REM Update the SsDir environment variable for command line programs
echos Selecting %DatabaseName SourceSafe database...
setx SsDir "%DatabasePath"
set SsDir=%DatabasePath
echo done

REM Restart AutoHotKey so that it recognizes the new database
call AutoHotKey restart

return

:gui
start /pgm "%VssDir\SsExp"
return

:delete

REM Arguments
iff %# == 0 then
  gosub SelectDatabase
elseiff %# == 1 then
  gosub GetDatabase
else
  goto usage
endiff

echos Deleting database registration for %DatabaseName SourceSafe database...
call registry.btm 32 delete "%VssKey\databases\%@UnQuote[%DatabaseName]"
echo done

return

:add
if %# != 2 goto usage
set DatabaseName=%@UnQuote[%1]
set DatabasePath=%@UnQuote[%2]

gosub AddHelper

return

:AddHelper

REM Arguments
set DatabaseName=%@UnQuote[%DatabaseName]
set DatabasePath=%@UnQuote[%DatabasePath]

REM Add the database
echos Adding %DatabaseName at %DatabasePath...
call registry.btm 32 set "%VssKey\Databases\%DatabaseName" REG_SZ %DatabasePath > nul:
echo done

REM Create the default working folder
if not IsDir "%CodeDir" md /s "%CodeDir"

REM If the server is available, set the working folder
set server=%@word["\",0,%DatabasePath]
echos Checking for %server server...
call host prepare %server
iff %? == 0 then
  echo found
  
  call VisualSourceSafe select "%DatabaseName"
  
  echos Setting working folder to %CodeDir...
  ss WorkFold $/ "%CodeDir"
  echo.

endiff

return

:setup

REM Add VisualSourceSafe to the system path
call SetVar /s /p path "%VssDir"

REM Add default SourceSafe databases - must be done after the path is set
gosub AddDefault

return

:fix
call VisualSourceSafe analyze %$ -v4 -c -d -f
return

:analyze
gosub GetDatabase

set options=-v4
if %# != 0 set options=%$

start /pgm "%VssDir\analyze" "%DatabasePath\data" %options
return

REM Get the database from the command line
:GetDatabase

REM Initialize
set DatabaseName=
set DatabasePath=%SsDir

REM Return if there are no more arguments, or the next argument is a command
if %# == 0 return
if "%@UnQuote[%@left[1,%1]]" == "-" return 0
if "%@UnQuote[%@left[1,%1]]" == "/" return 0

REM Get the database name from the command line
set DatabaseName=%@UnQuote[%1]
shift

gosub GetDatabasePath

return

REM Select the database by prompting the user
:SelectDatabase

REM Create a file to store available databases
set AvailableFile=%@unique[%temp]
echos. > "%AvailableFile"

REM Add each database
reg query %VssKey\Databases | egrep -i REG_SZ | gawk '{ FS = "\t" } { sub(" *","",$1) } { printf $1 "\n" }' >> "%AvailableFile"

set DatabaseName=%@select[%AvailableFile,5,10,15,40,Select SourceSafe Database,1]
iff "%DatabaseName" == "" then
  echo No database selected.
  quit 1
endiff

gosub GetDatabasePath

return 0

REM Get the database path for the selected database
:GetDatabasePath

set DatabasePath=%@RegQuery[%@quote[%VssKey\Databases\%DatabaseName]]
iff "%DatabasePath" == "-1" then
  echo There is no VSS database named %DatabaseName defined.
  quit 1
endiff

return
