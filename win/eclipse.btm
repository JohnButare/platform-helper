@echo off
SetLocal

REM Initialize
set title=* - Eclipse - *

set EclipseBaseDir=%programs\Eclipse
set EclipseVersions=3.0 3.0.2 3.4.1 3.5.1 3.6.0

set EclipseVersion=
set EclipseJre=
set EclipseInstalledVersions=

REM If there is more than one version of eclipse  installed and the user has hasked to select it then prompt them for the version
iff "%1" == "select" then
	call select.btm dir /NoPrompt "%EclipseBaseDir"
	if %? != 0 quit %?
	
	set EclipseVersion=%@FileName[%dir]
	shift
endiff

REM Get Eclipse version argument - known version or one installed. 
iff %@IsInList[%1,%EclipseVersions] == 1 .or. (%# gt 0 .and. IsFile "%programs\Eclipse\%1\eclipse.exe") then
	set EclipseVersion=%1
	shift
endiff

REM Post argument initialization

REM Get the Eclipse version
iff "%EclipseVersion" == "" then

	REM Default to the version stored in default.txt
	iff IsFile "%EclipseBaseDir\default.txt" then
		set EclipseVersion=%@ExecStr[type "%EclipseBaseDir\default.txt"]

	REM Default version to the newest installed version of Eclipse	
	else
		gosub GetInstalledVersions
		set EclipseVersion=%@word[0,%EclipseInstalledVersions]
		
	endiff
	
endiff

set EclipseDir=%EclipseBaseDir\%EclipseVersion
set EclipseProgram=%EclipseDir\eclipse.exe

REM IsInstalled Command
iff "%1" == "IsInstalled" then
	quit %@if[IsFile "%EclipseProgram",1,0]	
endiff

REM Validate the eclipse version is installed
iff "%EclipseVersion" == "" .or. not IsDir "%EclipseBaseDir\%EclipseVersion" then		
	echo Eclipse %@if[ "%EclipseVersion" == "",,version %EclipseVersion ]is not installed.
	quit 1
endiff

REM Arguments
:GetArgs
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

set command=start
iff %# gt 0 .and. IsLabel %1 then
	set command=%1
	shift
endiff
if not IsLabel %command goto usage

REM Run command
gosub %command
quit %_?

endiff

:usage
text
Eclipse Java development environment.
usage: eclipse [<version>|select](latest) [start |clean|cd|info|init|SetJre|SetDefault|SetShortcut](start)
  LinkPlugin <plugin name> <plugin directory>
  start [workspace] [force]
endtext
quit 1

:LinkPlugin

if %# != 2 goto usage

set name=%1
set dir=%@UnQuote[%2]

iff not IsDir "%dir" then
	echo Plugin directory "%dir" does not exist.
	return 1
endiff

iff not IsDir "%EclipseDir\dropins" then
	echo Eclipse dropsin directory "%EclipseDir\dropins" does not exist.
	return 1
endiff

echo path=%@replace[\,/,%@sfn[%dir]] > "%EclipseDir\dropins\%name.link"

return

:cd
cde "%EclipseDir"
EndLocal /d 
return

REM Clean  plugin cache so that new plugins are discovered and flushes plugins which have been removed.
:clean
call eclipse.btm %EclipseVersion start -clean
return

:start

REM Arguments

set workspace=
iff IsDir "%@UnQuote[%1]\.metadata" then
	set workspace=-data "%@UnQuote[%1]"
	shift
endiff

REM Find Eclipse VM argument
set vm=
gosub GetJre
iff "%EclipseJre" != "" then
	set vm=-vm "%EclipseJre\bin\javaw.exe"
endiff

set program="%EclipseProgram" -showlocation %vm %workspace %$

REM Start new Eclipse if a workspace is specified, otherwise try and show the existing eclipse
iff defined workspace .or. %1 == force then
	start /pgm %program
else
	activate "%title" max >& nul:
	if %_? != 0 start /pgm %program
endiff

return %_?

:info
echo   Version: %EclipseVersion
echo   Program: %EclipseProgram

gosub GetJre
iff "%EclipseJre" != "" then
	echo       JRE: %EclipseJre
endiff

iff IsFile "%EclipseBaseDir\default.txt" then
	echo   Default: %@ExecStr[type "%EclipseBaseDir\default.txt"]
endiff

gosub GetInstalledVersions
echo Installed: %EclipseInstalledVersions

return 0

:init
EndLocal /d EclipseDir EclipseProgram EclipseVersion
return 0

:GetInstalledVersions

if "%EclipseInstalledVersions" != "" return

for /d dir in ("%EclipseBaseDir\*") (
	iff IsFile "%dir\eclipse.exe" then
		set EclipseInstalledVersions=%@FileName[%dir] %EclipseInstalledVersions
	endiff
)

return

:GetJre

if "%EclipseJre" != "" return

iff IsFile "%EclipseDir\jre.txt" then
	set EclipseJre=%@ExecStr[type "%EclipseDir\jre.txt"]
elseiff %@quote[%JAVA_HOME] != "" .and. IsDir %@quote[%JAVA_HOME] then
	set EclipseJre=%@UnQuote[%JAVA_HOME]
endiff

return

:SetJre

iff %@IsElevated[] == 0 then
	call sudo eclipse %EclipseVersion SetJre
	return %?
endiff

REM Prompt user for the JDK to use to run Eclipse - Eclipse arhcitecture must match JRE architecture
call JavaUtil FindJre %@OsArchitecture[]
if %? != 0 return %?

echo %jre > "%EclipseDir\jre.txt"
echo @start /pgm "%EclipseProgram" -vm "%jre\bin\javaw.exe" `%$` > "%EclipseDir\eclipse.cmd"

REM Update the shortcut to use the new JRE
gosub SetShortcut

echo Eclipse %EclipseVersion JRE set to "%jre".
	
EndLocal

return

:SetShortcut
gosub GetJre
call MakeDir "%@PublicStartMenu[]\Programs\Development\Java"
call MakeShortcut "%EclipseDir\eclipse.exe" ^
	"%@PublicStartMenu[]\Programs\Development\Java\Eclipse %EclipseVersion.lnk" ^
	/args "-showlocation -vm ^"%EclipseJre\bin\javaw.exe^""
return 0

:SetDefault

REM Elevate
iff %@IsElevated[] == 0 then
	call sudo.btm eclipse.btm %EclipseVersion SetDefault
	quit %?
endiff

REM Store the default version in default.txt

set file=%EclipseBaseDir\default.txt

if IsFile "%file" attrib /q -h "%file"
echo %EclipseVersion > "%file"
if IsFile "%file" attrib /q +h "%file"

echo Eclipse %EclipseVersion is now the default.

return 0