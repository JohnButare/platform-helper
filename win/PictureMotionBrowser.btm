@echo off
SetLocal

REM Initialize
set title=PMB
set program=%programs32\Sony\PlayMemories Home\PMBBrowser.exe
set WatcherProgram=%programs32\Sony\PlayMemories Home\PMBVolumeWatcher.exe
set FilesToHide=*.modd *.moff *.vmlp

set GpsTitle=GPS Image Tracker
set GpsProgram=%programs32\Sony\PMB\PMBGPSMatch.exe
set GpsUpdaterProgram=%programs32\Sony\PMB\PMBGPSSupportTool.exe"

set GpsDir=%UserDocuments\Sony PMB\GPSMatch
set GpsLogDb=%AppData\Sony Corporation\PMB\GPSUtil\DB\logdb

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

set command=start
iff %# gt 0 then
  set command=%1
  shift
endiff
if not IsLabel %command goto usage

REM Run command
gosub %command
quit %_?

:usage
text
usage: PictureMotionBrowser [start|cleanup|close|service|EditDates](start)
  gps [bak|start|update|transfer](start)
    bak - backup GPS tracking data
    start - start the GPS matching program
    update - update camera media with GPS assist data
  service start|stop|restart|auto|demand|disable|enable|status|BriefStatus
    start or stop the service and watcher program to automatically recognize Sony devices.
endtext
quit 2

:clean
:cleanup

echo Hiding Picture Motion Browser metadata files...
call HideFiles.btm "pub:\Videos" "%FilesToHide"
call HideFiles.btm "home:\Videos" "%FilesToHide"

return 0

:gps

set command=start
iff %# gt 0 then
	set command=%1
	shift
endiff

if not IsLabel Gps%command goto usage

gosub Gps%command
return %_?

:GpsUpdate
if IsFile "%GpsUpdaterProgram" start /pgm "%GpsUpdaterProgram"
return

:GpsTransfer

REM Transfer GPS data to oversoul
set GpsLogDir=Sony PMB\GPSMatch\Log
set GpsLogDb=Sony Corporation\PMB\GPSUtil\DB\logdb
set LocalGpsDir=%UserData\%GpsLogDir
set OversoulGpsDir=\\oversoul\d$\users\%UserName\documents\data\%GpsLogDir

iff IsDir "%LocalGpsDir" .and. IsDir "%OversoulGpsDir" then
	call ask `Transfer GPS log database entries?` y
	iff %? == 1 then
	
		call PictureMotionBrowser.btm gps bak
		call WinMerge.btm "%LocalGpsDir" "%OversoulGpsDir"
		call WinMerge.btm "%AppData\%GpsLogDb" "\\oversoul\c$\users\%UserName\AppData\Roaming\%GpsLogDb"
		pause
		
		call PictureMotionBrowser.btm gps
		pause Validate GPS Log Title and Time adjustments then press any key to continue...
	endiff
endiff

return 0

:GpsStart

text
- Import the GPS log
  - Click Log File Import
  - Double click on a log file to set the log title (name of the trip)
  - (optional) To merge log files, click on the first log file and click on Merge Logs
- Add GPS location to pictures
  -	Drag images without position information to the right side of the tracker
  -	Apply Corrections if needed (location or time)
  -	(optional) Add or view position information by double clicking on an image.  The difference are highlighted in red.
  -	To add position information to all files, click Add Position Information to Files
  -	Selecting images – yellow pins indicate location from the GPS log
endtext

if not IsFile "%GpsProgram" return
if %@IsTaskRunning[%@name[%GpsProgram]] == 1 return 0
call task start dup title "%GpsTitle" "%GpsProgram"
return %?

:GpsBak

if not (IsDir "%GpsDir" .or. IsFile "%GpsLogDb") return 0

echos Backing up GPS data...
if IsDir "%GpsDir" call bak.btm /dest "%GpsDir" "%GpsDir\log"
if IsFile "%GpsLogDb" call bak.btm /dest "%GpsDir" "%GpsLogDb"

return 0

:start
if not IsFile "%program" return
if %@IsTaskRunning[%@name[%program]] == 1 return 0
call task start dup title "%title" "%program"
return

:startup
if not IsFile "%program" return
if %@IsTaskRunning[%@name[%program]] == 1 return 0
call task start "%program"
sleep 4
activate "%title" min
return

:close

if %@IsTaskRunning[%@name[%program]] == 0 return 0

REM Two TaskEnds required to close
TaskEnd "%title"
TaskEnd "%title"

return

:IsInstalled
return %@if[IsFile "%program",1,0]

:IsRunning

gosub IsInstalled
if %_? == 0 return 0

return %@IsTaskRunning[%program]

:service

REM Arguments

set command=status
iff %# gt 0 .and. IsLabel Service%1 then
	set command=%1
	shift
endiff

if %# != 0 goto usage

REM Run the service command
gosub Service%command

return

:ServiceStart
:ServiceStop
:ServiceRestart
:ServiceAuto
:ServiceDemand
:ServiceDisable
:ServiceEnable
:ServiceStatus
:ServiceBriefStatus

REM configure the service
call sudo.btm service.btm %command wait NoCheckHost pmbdeviceinfoprovider %host

REM start or stop the watcher
iff %command == start .or. %comand == restart then
	iff %@IsTaskRunning[%WatcherProgram] == 0 then
		echos Starting the watcher program...
		start /pgm "%WatcherProgram"
		echo done.
	endiff
	
elseiff %command == stop .or. %comand == manual then
	iff %@IsTaskRunning[%WatcherProgram] == 1 then
		echos Stopping the watcher program...
		taskend %@name["%WatcherProgram"]
		echo done.
	endiff
endiff

return

:EditDates


REM Update PictureMotionBrowser indexes and edit picture metadata if required
text 
- Ensure media metadata date taken matches the filename
- (optional batch date shift) Edit, Batch Date Change...
endtext
call PictureMotionBrowser.btm	
pause

call PictureMotionBrowser.btm cleanup
