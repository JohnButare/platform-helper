@echo off
SetLocal
on break cancel 1

REM Arguments
if %@IsHelpArg[%@UnQuote[%1]] == 1 goto usage

gosub check
echo %_?
quit %_?

:usage
text 1>&2
usage: IsTaskRunning [<method>](pstat) [executable]
  Outputs 1 if the specified executable is running, otherwise outputs 0.
  Executable can contain wildcard characters (* or ?).
  [<method>](pstat) - determine the method to use to check for process existence.  
    - pstat - pstat.exe
      (pro) wildcard search without false positives 
      (con) if not elevated does not return elevated processes
      (con) x86 Take Command does not return x64 executables
    - Tasklist - built-in command
      (pro) fast, built-in, returns elevated processes
      (con) also searches window titles which results in false positives 
      (con) does not work for some wildcard searches
    - pslist - pslist.exe, (pro) fast (con) does not work with wildcards
endtext
quit 2

:check

REM Arguments

set method=
iff IsLabel %1Check then
	set method=%1Check
	shift
endiff

set name=%@UnQuote[%$]

REM Return if nothing was passed
iff "%name" == "" then
	echo 0
	quit 0
endiff

iff "%method" != "" then
	gosub %method
	return %_?
endiff

REM pstat does not return x64 executables under x86 Take Command 
iff "%_x64" != "1" then
	iff "%@ExeArchitecture[%name]" == "x64" then
		gosub TaskListCheck
		return %_?
	endiff
endiff

iff IsPlugin pstat then
	gosub PstatCheck
else
	gosub TaskListCheck
endiff

return %_?

:PstatCheck

set check=%name

REM Assume EXE if the extension is not specified
if "%@ext[%check]" == "" set check=%check.exe

REM Determine if pstat should return the path
iff "%@path[%check]" == "" then
	set options=/f f
else
	set options=/f q
endiff

REM Convert wildcard characters to egrep style wildcards
set check=%@RegExWild[%check]

REM Escape special grep characters 
set check=%@replace[\,/,%check]
set check=%@replace[+,\+,%check]
set check=%@replace[(,\(,%check]
set check=%@replace[),\),%check]

REM Check if the specified process exists using pstat - requires sysutils plugin
REM sed - convert \ to / (win32 egrep.exe does not properly escape \)
pstat %options . | sed 's/\\\\/\//g' | egrep -i "^^%check%$" >& nul:
return %@if[%? == 1,0,1]

:TaskListCheck
tasklist %@name[%name] |& egrep . >& nul:
return %@if[%? == 1,0,1]

:PsListCheck
pslist -e %@quote[%name] >& nul:
return %@if[%? == 1,0,1]
