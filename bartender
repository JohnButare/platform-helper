#!/usr/bin/env bash
. "${BASH_SOURCE[0]%/*}/function.sh" app script || exit

usage()
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [start|close|profile|program|IsInstalled|IsRunning|version](start)
Bartender commands."
}

init()
{
	defaultCommand="start"
	profileName="bartender" profileDir="$HOME/Library/Preferences" profileMask="com.surteesstudios.Bartender.plist"
	program="$P/Bartender 5.app"
}

closeCommand() { ! isRunningCommand && return 0; ProcessClose "$program"; } 
isInstalledCommand() { [[ -d "$program" ]]; }
isRunningCommand() { IsProcessRunning "$program"; }
programCommand() { echo "$program"; }
restartCommand() { closeCommand && startCommand; }
startArgs() { startArgs=( "$@" ); (( shift+=$# )); return 0; }
startCommand() { AppInstallCheck && start "$program"; }
startupCommand() { startCommand; }
versionCommand() { AppInstallCheck && AppVersion "$program"; }

#
# Profile Command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); return 0; }

profileCommand()
{
	[[ "$command" == "restore" ]] && { closeCommand || return; }
	profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}" || return
	[[ "$command" == "restore" ]] && { startCommand || return; }
	return 0
}

ScriptRun "$@"
