#!/usr/bin/env bash
. app.sh || exit

usage() 
{
	ScriptUsage "$1" "\
Usage: $(ScriptName) [OPTION]... [IsInstalled|IsRunning|profile|program|update](start)
$(ScriptName) commands."
}

init()
{
	defaultCommand="start"
	profileName="zsh" profileDir="$HOME/.oh-my-zsh"	profileMask="* .git* .editorconfig"
	ZSH="${ZSH:-$HOME/.oh-my-zsh}"
	program="zsh"
}

isInstalledCommand() { InPath "$program"; }
isRunningCommand() { IsProcessRunning "$program"; }
programCommand() { echo "$program"; }
startArgs() { startArgs=( "$@" ); shift="$#"; }

updateCommand()
{
	AppInstallCheck || return
	
	# update zsh
	ZshUpdate || return # pause fails if run update from bash using zsh -i -c

	# update custom plugins and themes
	local d="$HOME/.oh-my-zsh/custom"
	local dir dirs; IFS=$'\n' ArrayMake dirs "$(fd --max-depth 1 --type d '.*' "$d/plugins") $(fd --max-depth 1 --type d '.*' "$d/themes" )"
	for dir in "${dirs[@]}"; do
		[[ ! -d "$dir/.git" ]]	&& continue
		hilight "\nUpdating $(GetFileName "$dir")..."
		cd "$dir" || return
		git pull || return
	done
}
		
#
# Profile Command
#

profileUsage() { echot "Usage: $(ScriptName) profile dir|SaveDir|save|restore [<profile name>|default](latest)\n$(ScriptName) configuration."; }
profileArgs() { profileArgs=( "$@" ); (( shift+=$# )); }

profileCommand()
{
	AppInstallCheck || return

	local noPrompt command="${profileArgs[0]}"
	if [[ "$command" == "restore" && -d ~/.oh-my-zsh/.git ]]; then
		[[ ! $noPrompt ]] && { ask "Do you want to remove the existing Oh My Zsh configuration" || return 0; }
		rm -fr ~/.oh-my-zsh || return
		mkdir "$ZSH" || return
		noPrompt="--no-prompt"
	fi

	profile $noPrompt --app "$profileName" --method "$profileDir" --files "$profileMask" "${profileArgs[@]}"
}

ScriptRun "$@"
